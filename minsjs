<!doctype html>
<html lang="hi">
<head>
  <!-- 1. Meta tags for character set and viewport -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  
  <!-- 2. Page title -->
  <title>brixo mart</title>
  
  <!-- 3. External stylesheets -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css"/>
  
  <!-- Inline CSS -->
  <style>
    /* 1. Global Reset and Base Styles */
    *{box-sizing:border-box;margin:0;padding:0}
    html,body{
      height:100%;
      font-family:Inter, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial;
      background:#f9f9f9;
    }

    /* 2. Main Layout Structure */
    .main-container {
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }

    .content {
      flex: 1;
      display: flex;
      flex-direction: column;
    }

    /* 3. Header Styles */
    .header-section {
      background: white;
    }

    .topbar{
      width:100%;
      background:#ffffff;
      display:flex;
      align-items:center;
      justify-content:space-between;
      padding:12px 16px;
      border-bottom:1px solid rgba(0,0,0,0.04);
      gap:12px;
    }
    .left{
      display:flex;
      align-items:center;
      gap:14px;
    }
    .hamburger{
      width:28px;
      height:28px;
      display:flex;
      flex-direction:column;
      align-items:center;
      justify-content:center;
      border-radius:6px;
      cursor:pointer;
      gap:4px;
      background:none;
      border:none;
      -webkit-tap-highlight-color: transparent;
    }
    .hamburger span{
      width:20px;
      height:2px;
      background:#222;
      border-radius:2px;
    }
    .logo{
      font-weight:700;
      font-size:26px;
      color:#4CAF50;
      letter-spacing:0.5px;
      display:flex;
      align-items:center;
      gap:8px;
    }
    .actions{
      display:flex;
      align-items:center;
      gap:16px;
      position:relative;
    }
    .icon-btn{
      width:36px;
      height:36px;
      display:flex;
      align-items:center;
      justify-content:center;
      border:none;
      background:none;
      cursor:pointer;
      padding:0;
      position:relative;
      -webkit-tap-highlight-color: transparent;
      outline: none;
    }
    .icon-btn:active {
      background-color: transparent !important;
    }
    .icon-btn:hover{
      background:none;
    }
    svg{
      display:block;
      width:22px;
      height:22px;
    }

    /* 4. Side Menu Styles */
    .menu {
      position: fixed;
      top: 0;
      left: -300px;
      width: 280px;
      height: 100%;
      background: white;
      box-shadow: 2px 0 10px rgba(0,0,0,0.1);
      z-index: 1000;
      transition: left 0.3s ease;
      padding-top: 20px;
    }
    .menu.active {
      left: 0;
    }
    .menu-header {
      padding: 15px 20px;
      border-bottom: 1px solid #f0f0f0;
      font-size: 20px;
      font-weight: bold;
      color: #4CAF50;
      margin-bottom: 10px;
    }
    .menu-item {
      padding: 15px 20px;
      border-bottom: 1px solid #f0f0f0;
      color: #333;
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: 12px;
      cursor: pointer;
    }
    .menu-item svg {
      width: 18px;
      height: 18px;
      stroke: #4CAF50;
    }
    .overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0,0,0,0.5);
      z-index: 999;
      display: none;
    }
    .overlay.active {
      display: block;
    }

    /* 5. Address Bar Styles */
    .address-bar {
        display:flex;
        align-items:center;
        padding:10px 15px;
        background: linear-gradient(to bottom, #A8E6CF, #fdf6f0);
        font-size:14px;
        gap:8px;
        cursor:pointer;
    }
    .address-bar svg { flex-shrink:0; }
    .address-text { flex:1; white-space:nowrap; overflow:hidden; text-overflow:ellipsis; }

    /* 6. Search Bar Styles */
    .home-search {
        display:flex;
        align-items:center;
        background:white;
        border:1px solid rgba(107,114,128,0.3);
        border-radius:8px;
        overflow:hidden;
        max-width:90%;
        margin:10px auto;
        height:46px;
        padding:0 12px;
        gap:8px;
        box-shadow:0 1px 3px rgba(0,0,0,0.1);
    }
    .home-search svg { flex-shrink:0; display:block; }
    .home-search input { flex:1; height:100%; border:none; outline:none; padding:0 4px; font-size:14px; color:#6B7280; }

    /* 7. Popup Overlay Styles */
    .popup-overlay {
        position:fixed; top:0; left:0;
        width:100%; height:100%;
        background: rgba(0,0,0,0.5);
        display:none;
        align-items:flex-end;
        justify-content:center;
        z-index:1001;
    }

    /* 8. Popup Box Styles */
    .popup-box {
        background:#fff;
        width:100%; max-width:500px;
        border-top-left-radius:16px;
        border-top-right-radius:16px;
        padding:20px;
        box-shadow:0 -2px 10px rgba(0,0,0,0.2);
        animation: slideUp 0.3s ease-out;
    }
    @keyframes slideUp { from{transform:translateY(100%);} to{transform:translateY(0);} }
    .popup-header { font-size:16px; font-weight:bold; margin-bottom:15px; }

    .popup-search {
        display:flex;
        align-items:center;
        background:white;
        border:1px solid rgba(107,114,128,0.3);
        border-radius:8px;
        overflow:hidden;
        margin-bottom:10px;
        height:46px;
        padding:0 12px;
        gap:8px;
        box-shadow:0 1px 3px rgba(0,0,0,0.1);
    }
    .popup-search svg { flex-shrink:0; display:block; }
    .popup-search input { flex:1; height:100%; border:none; outline:none; padding:0 4px; font-size:14px; color:#6B7280; }

    /* 9. Suggestions List Styles */
    .suggestions { max-height:150px; overflow-y:auto; border:1px solid #ccc; border-radius:5px; margin-bottom:10px; }
    .suggestions div { padding:8px; cursor:pointer; }
    .suggestions div:hover, .suggestions .active { background:#eee; }

    /* 10. Location Button Styles */
    .use-location { display:flex; align-items:center; gap:10px; color:green; font-weight:bold; cursor:pointer; padding:10px 0; }

    /* 11. Confirm Button Styles */
    .confirm-btn { width:100%; padding:12px; background:green; color:white; border:none; border-radius:8px; font-size:16px; cursor:pointer; }

    /* 12. Slider/Carousel Styles */
    .swiper {  
        width: 100%;  
        margin-top: 10px;
    }  

    .swiper-slide {  
        display: flex;  
        justify-content: center;  
        align-items: center;  
        background: #fff;  
    }  

    .slide-container {  
        display: flex;  
        justify-content: space-between;  
        align-items: center;  
        width: 95%;  
        max-width: 1100px;  
        height: 200px;  
        border-radius: 20px;  
        overflow: hidden;  
        background: #fff;  
        border: 1px solid #ddd;  
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }  

    .slide-left {  
        flex: 1;  
        background: #fff;  
        color: #000;  
        padding: 20px;  
        display: flex;  
        flex-direction: column;  
        justify-content: center;  
    }  

    .slide-left h2 {  
        font-size: 20px;  
        font-weight: 700;  
        margin: 0;  
    }  

    .slide-left .price {  
        font-size: 18px;  
        font-weight: 700;  
        margin: 5px 0;  
    }  

    .slide-left p {  
        font-size: 14px;  
        margin: 5px 0 0;  
    }  

    .slide-left small {  
        font-size: 10px;  
        opacity: 0.6;  
        margin-top: auto;  
    }  

    .slide-right {  
        flex: 1;  
        background: linear-gradient(90deg, #fbe9e7, #e8f5e9);  
        display: flex;  
        flex-direction: column;  
        align-items: center;  
        justify-content: center;  
        padding: 10px;  
    }  

    .slide-right h3 {  
        font-size: 32px;  
        font-weight: 500;  
        margin: 0;  
        background: linear-gradient(to right, orange, green);  
        -webkit-background-clip: text;  
        -webkit-text-fill-color: transparent;  
    }  

    .slide-right p {  
        color: #2e7d32;  
        font-size: 14px;  
        text-align: center;  
        margin: 5px 0;  
    }  

    .sale-badge {  
        background: #ffeb3b;  
        color: #000;  
        font-size: 12px;  
        font-weight: bold;  
        padding: 4px 8px;  
        border-radius: 4px;  
        margin-bottom: 10px;  
    }  

    /* 13. Pagination Dots Styles */
    .swiper-pagination {  
        position: relative;  
        margin-top: 15px;  
    }  

    .swiper-pagination-bullet-active {  
        background: #4CAF50 !important;
    }  

    /* 14. Category Navigation Styles */
    .category-container {
        margin-top: 10px;
        padding: 0 10px;
    }
    .category-section {
      background: white;
      border-radius: 12px;
      margin: 12px 0;
      padding: 12px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }

    .section-title {
      font-size: 15px;
      font-weight: 600;
      color: #333;
      margin-bottom: 8px;
      padding: 0 4px;
    }

    .category-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      grid-auto-rows: 1fr;
      gap: 8px;
    }

    .category-card {
      background: white;
      border-radius: 6px;
      overflow: hidden;
      text-align: center;
      transition: transform 0.2s;
      display: flex;
      flex-direction: column;
      height: 100%;
      border: 1px solid #f0f0f0;
      cursor: pointer;
    }

    .category-name {
      padding: 8px 4px;
      font-size: 12px;
      font-weight: 500;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
        

    .category-bar {  
        display: flex;  
        overflow-x: auto;  
        padding: 10px 0;
        background: #fff;  
        scrollbar-width: none;
        -webkit-tap-highlight-color: transparent;
    }  

    .category-bar::-webkit-scrollbar {
        display: none;
    }

    .category {  
        flex: 0 0 auto;  
        width: 70px;
        text-align: center;  
        padding: 5px 0;  
        cursor: pointer;  
        margin: 0 5px;
    }  

    .category-icon {  
        display: flex;  
        justify-content: center;  
        align-items: center;  
        height: 40px;
        width: 40px;
        margin: 0 auto;  
        border-radius: 10px;  
        background: #f5f5f5;
        transition: all 0.3s ease;
    }  

    .category.active .category-icon {  
        background-color: #e6f7e6;
        transform: scale(1.05);
    }  

    .category img {  
        width: 24px;
        height: 24px;
        object-fit: contain;  
    }  

    .category svg {
        width: 24px;
        height: 24px;
        filter: drop-shadow(0 0 2px rgba(76, 175, 80, 0.5));
    }

    .category span {  
        display: block;  
        margin-top: 6px;
        font-size: 12px;
        color: #333;  
        font-weight: 500;
    }  

    .category.active span {  
        color: #4CAF50;
        font-weight: 600;
    }

    /* 15. Section Heading Styles */
    .section-heading {
        padding: 10px 15px 5px;
        font-size: 16px;
        font-weight: 600;
        color: #333;
    }

    /* 16. Product Listing Styles */
    .container {
      padding: 16px;
      max-width: 1200px;
      margin: 0 auto;
    }

    .category-section {
      background: white;
      border-radius: 12px;
      margin: 16px 0;
      padding: 16px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    }

    .category-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      grid-auto-rows: 1fr;
      gap: 12px;
    }

    .category-card {
      background: white;
      border-radius: 8px;
      overflow: hidden;
      text-align: center;
      transition: transform 0.2s;
      display: flex;
      flex-direction: column;
      height: 100%;
      border: 1px solid #f0f0f0;
      cursor: pointer;
    }

    .category-card:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .category-image-container {
      flex: 1;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 12px;
      background: #f5f5f5;
      border-radius: 8px 8px 0 0;
    }

    .category-image {
      width: 100%;
      height: auto;
      max-height: 60px;
      object-fit: contain;
    }

    .category-name {
      padding: 12px 4px;
      font-size: 13px;
      font-weight: 500;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    /* 17. Product Grid Styles */
    .product-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 15px;
    }

    .product-card {
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 10px;
      background: #fff;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      position: relative;
      cursor: pointer;
    }

    .product-image-container {
      width: 100%;
      height: 150px;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #f5f5f5;
      border-radius: 6px;
      overflow: hidden;
    }

    .product-image {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }

    .wishlist {
      position: absolute;
      top: 10px;
      right: 10px;
      width: 32px;
      height: 32px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: transform .18s ease, filter .18s ease;
      filter: drop-shadow(0 2px 6px rgba(0,0,0,0.12));
      background: white;
      border-radius: 50%;
      z-index: 5;
      border: none;
    }

    .wishlist:active { transform: scale(.96); }

    .wishlist svg {
      width: 20px;
      height: 20px;
      fill: transparent;
      stroke: #8b8b8b;
      stroke-width: 1.4;
      transition: fill .18s ease, stroke .18s ease, transform .22s cubic-bezier(.2,.8,.2,1));
      transform-origin: center;
    }

    .wishlist:hover svg { transform: scale(1.08); stroke: #ff6b6b; }

    .wishlist.active svg {
      fill: #ff6b6b;
      stroke: #ff6b6b;
      transform: scale(1.06);
    }

    .product-info {
      margin-top: 10px;
    }

    .product-title {
      font-size: 14px;
      font-weight: 500;
      margin-bottom: 5px;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      min-height: 36px;
    }

    .product-price {
      font-size: 14px;
      color: #2e7d32;
      font-weight: 600;
    }

    .bottom-row {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: 5px;
    }

    .discount-text {
      font-size: 12px;
      color: red;
      font-weight: 600;
    }

    .add-btn {
      background: #fff;
      color: #2e7d32;
      border: 1.5px solid #2e7d32;
      border-radius: 6px;
      text-align: center;
      padding: 5px 0;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      user-select: none;
      width: 60px;
      transition: 0.3s;
    }

    .add-btn:hover {
      background: #f5fff5;
    }

    .qty-control {
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: #fff;
      border: 1.5px solid #2e7d32;
      color: #2e7d32;
      border-radius: 6px;
      font-weight: 600;
      font-size: 14px;
      width: 60px;
      height: 28px;
    }

    .qty-control button {
      background: none;
      border: none;
      color: #2e7d32;
      font-size: 16px;
      font-weight: bold;
      cursor: pointer;
      width: 18px;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    /* 18. Product Detail Page Styles */
    #product-detail-page {
      background: white;
      min-height: 100vh;
      padding-top: 20px;
    }

    .product-detail-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 16px;
    }

    .product-detail {
      background: white;
      border-radius: 12px;
      padding: 20px;
      margin-bottom: 30px;
    }

    .product-detail-image-container {
      width: 100%;
      height: 300px;
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #f5f5f5;
      border-radius: 8px;
      margin-bottom: 20px;
      overflow: hidden;
    }

    .product-detail-image {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }

    .product-detail-title {
      font-size: 20px;
      font-weight: 600;
      margin-bottom: 10px;
    }

    .product-detail-price {
      font-size: 20px;
      color: #2e7d32;
      font-weight: 700;
      margin-bottom: 12px;
    }

    .product-detail-description {
      margin-bottom: 20px;
      line-height: 1.6;
      color: #555;
    }

    .product-detail-actions {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 20px;
    }

    .product-detail-qty {
      display: flex;
      align-items: center;
    }

    .product-detail-qty button {
      width: 40px;
      height: 40px;
      font-size: 20px;
      background: #f0f0f0;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .product-detail-qty span {
      margin: 0 15px;
      font-size: 18px;
      font-weight: 600;
    }

    .add-to-cart-btn {
      background: #2e7d32;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 12px 24px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: background 0.3s;
    }

    .add-to-cart-btn:hover {
      background: #1b5e20;
    }

    /* 19. Related Products Section Styles */
    .related-products {
      margin-top: 30px;
      padding: 0 16px;
      max-width: 1200px;
      margin-left: auto;
      margin-right: auto;
    }

    .related-products h2 {
      font-size: 20px;
      margin-bottom: 20px;
      color: #333;
      font-weight: 600;
    }

    .related-products-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 15px;
    }

    /* 20. Navigation Styles */
    .back-button {
      display: flex;
      align-items: center;
      margin-bottom: 16px;
      cursor: pointer;
      color: #2e7d32;
      font-weight: 600;
      background: none;
      border: none;
      padding: 0;
      font-size: 16px;
    }

    .back-button svg {
      margin-right: 8px;
    }

    /* 21. Empty State Styles */
    .empty-state {
      text-align: center;
      padding: 40px 20px;
      color: #666;
      grid-column: 1 / -1;
    }

    /* 22. Visibility Toggle Class */
    .hidden {
      display: none;
    }

    /* 23. Full Screen Products Page Styles */
    .full-screen-products {
      position: fixed;
      top: 60px;
      left: 0;
      right: 0;
      bottom: 0;
      background: white;
      z-index: 100;
      overflow-y: auto;
      padding: 15px;
    }

    /* 24. Products Page Open State Styles */
    .products-page-open #header-section > *:not(.topbar),
    .products-page-open .swiper,
    .products-page-open .category-container {
      display: none;
    }

    /* 25. Wishlist Popup Styles */
    .wishlist-popup {
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background-color: #4CAF50;
      color: white;
      padding: 12px 24px;
      border-radius: 4px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.2);
      z-index: 1002;
      display: none;
      align-items: center;
      gap: 8px;
      animation: fadeInOut 2.5s ease-in-out;
    }

    .wishlist-popup svg {
      width: 20px;
      height: 20px;
      fill: white;
    }

    @keyframes fadeInOut {
      0% { opacity: 0; bottom: 0; }
      10% { opacity: 1; bottom: 20px; }
      90% { opacity: 1; bottom: 20px; }
      100% { opacity: 0; bottom: 0; }
    }

    /* 26. Wishlist Page Styles */
    #wishlist-page {
      background: white;
      min-height: 100vh;
      padding-top: 20px;
    }

    .wishlist-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 16px;
    }

    .wishlist-header {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 20px;
    }

    .wishlist-header h2 {
      font-size: 20px;
      color: #333;
    }

    .wishlist-count {
      background: #4CAF50;
      color: white;
      padding: 2px 8px;
      border-radius: 10px;
      font-size: 14px;
    }

    /* 27. Cart Page Styles */
    #cart-page {
      background: white;
      min-height: 100vh;
      padding-top: 20px;
    }

    .cart-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 16px;
    }

    .cart-header {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 20px;
    }

    .cart-header h2 {
      font-size: 20px;
      color: #333;
    }

    .cart-count {
      background: #4CAF50;
      color: white;
      padding: 2px 8px;
      border-radius: 10px;
      font-size: 14px;
    }

    .cart-items {
      margin-bottom: 20px;
    }

    /* 28. Cart Item Styles */
    .cart-item {
      display: flex;
      padding: 15px 0;
      border-bottom: 1px solid #eee;
      align-items: center;
    }

    .cart-item-image {
      width: 80px;
      height: 80px;
      margin-right: 15px;
      display: flex;
      align-items: center;
      justify-content: center;
      background: #f5f5f5;
      border-radius: 8px;
      flex-shrink: 0;
    }

    .cart-item-image img {
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
    }

    .cart-item-details {
      flex: 1;
      min-width: 0;
    }

    .cart-item-title {
      font-weight: 600;
      margin-bottom: 5px;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .cart-item-size {
      font-size: 12px;
      color: #666;
      margin-bottom: 5px;
    }

    .cart-item-price {
      font-weight: 600;
      color: #2e7d32;
      margin-bottom: 8px;
    }

    .cart-item-original-price {
      text-decoration: line-through;
      color: #999;
      font-size: 12px;
      margin-left: 5px;
    }

    .cart-item-actions {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: 10px;
    }

    .remove-item {
      color: #f44336;
      font-size: 12px;
      cursor: pointer;
      padding: 4px 8px;
      border-radius: 4px;
      transition: background 0.2s;
      display: flex;
      align-items: center;
      gap: 4px;
      background: none;
      border: none;
    }

    .remove-item:hover {
      background: #ffebee;
    }

    .qty-control {
      display: flex;
      align-items: center;
      border: 1px solid #2e7d32;
      border-radius: 6px;
      overflow: hidden;
      height: 28px;
    }

    .qty-control button {
      background: none;
      border: none;
      width: 28px;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      font-size: 16px;
      color: #2e7d32;
      font-weight: bold;
    }

    .qty-control button:hover {
      background: #f5f5f5;
    }

    .qty-control span {
      width: 28px;
      text-align: center;
      font-weight: 500;
    }

    /* 29. Empty Cart Styles */
    .empty-state {
      text-align: center;
      padding: 40px 20px;
      color: #666;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 16px;
    }

    .empty-state svg {
      opacity: 0.5;
    }

    .continue-shopping-btn {
      background: #4CAF50;
      color: white;
      border: none;
      border-radius: 8px;
      padding: 10px 20px;
      font-size: 14px;
      cursor: pointer;
      margin-top: 10px;
    }

    /* 30. Bill Details Styles */
    .bill-details {
      background: #f9f9f9;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 20px;
    }

    .bill-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 10px;
    }

    .bill-label {
      color: #666;
    }

    .bill-value {
      font-weight: 600;
    }

    .saved {
      color: #4CAF50;
    }

    .grand-total {
      border-top: 1px solid #eee;
      padding-top: 15px;
      margin-top: 15px;
      font-size: 18px;
      font-weight: 700;
    }

    .grand-total .bill-value {
      color: #2e7d32;
    }

    .original-total {
      text-decoration: line-through;
      color: #999;
      font-size: 14px;
      margin-left: 5px;
    }

    .checkout-btn {
      width: 100%;
      padding: 12px;
      background: #4CAF50;
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      margin-top: 20px;
    }

    .checkout-btn:hover {
      background: #3e8e41;
    }

    /* 31. Toast Message Styles */
    .toast-message {
      position: fixed;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      background: rgba(0,0,0,0.7);
      color: white;
      padding: 12px 24px;
      border-radius: 4px;
      z-index: 1000;
      opacity: 0;
      transition: opacity 0.3s;
    }

    .toast-message.show {
      opacity: 1;
    }

    /* 32. Categories Page Styles */
    .categories-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 14px 15px;
      font-size: 20px;
      font-weight: 600;
      background: #fff;
      color: #27ae60;
      border-bottom: 1px solid #eee;
      position: sticky;
      top: 0;
      z-index: 1000;
    }
    .categories-header .search-icon {
      font-size: 20px;
      color: #666;
      cursor: pointer;
    }

    /* 33. Categories Section Title Styles */
    .categories-section-title {
      font-size: 14px;
      font-weight: 600;
      color: #27ae60;
      margin: 20px 15px 10px;
      display: flex;
      align-items: center;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    .categories-section-title::before {
      content: "◆";
      margin-right: 8px;
      color: #2ecc71;
    }
    .categories-section-title::after {
      content: "";
      flex: 1;
      height: 1px;
      background: #ddd;
      margin-left: 10px;
    }

    /* 34. Categories Grid Styles */
    .categories-grid {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 15px;
      padding: 0 15px 20px;
    }
    .categories-card {
      background: #fff;
      border-radius: 14px;
      text-align: center;
      padding: 12px 6px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.08);
      transition: all 0.3s ease;
      cursor: pointer;
    }
    .categories-card:hover {
      transform: translateY(-3px) scale(1.02);
      box-shadow: 0 6px 15px rgba(0,0,0,0.12);
    }
    .categories-card img {
      width: 100%;
      height: 70px;
      object-fit: contain;
      margin-bottom: 8px;
      border-radius: 10px;
      background: #f9f9f9;
    }
    .categories-card p {
      font-size: 12px;
      font-weight: 600;
      color: #333;
      margin: 0;
    }

    /* 35. Search Overlay Styles */
    .search-overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: #fff;
      display: none;
      flex-direction: column;
      z-index: 2000;
    }
    .search-overlay.active {
      display: flex;
    }
    .search-header {
      display: flex;
      align-items: center;
      gap: 10px;
      padding: 12px 15px;
      border-bottom: 1px solid #eee;
      background: #fff;
    }
    .back-btn {
      background: none;
      border: 0;
      cursor: pointer;
      font-size: 20px;
      color: #666;
      padding: 6px;
    }

    /* 36. Styled Search Bar Styles */
    .search-bar {
      display: flex;
      align-items: center;
      gap: 8px;
      background: #fff;
      border: 1px solid rgba(107,114,128,0.3);
      padding-left: 12px;
      height: 46px;
      border-radius: 8px;
      flex: 1;
      transition: border-color .15s, box-shadow .15s;
    }
    .search-bar:focus-within {
      border-color: #27ae60;
      box-shadow: 0 0 0 3px rgba(39,174,96,.18);
    }
    .search-bar svg {
      width: 20px; height: 20px; fill: #6B7280;
    }
    .search-bar input {
      border: none;
      background: transparent;
      width: 100%;
      font-size: 14px;
      color: #333;
      outline: none;
    }
    .search-bar input::placeholder {
      color: #6B7280;
    }

    /* 37. Footer Styles */
    .footer {
      background: linear-gradient(to bottom, #43a047, #2e7d32);
      color: #fff;
      padding: 50px 20px;
      border-top-left-radius: 30px;
      border-top-right-radius: 30px;
      font-family: 'Arial', sans-serif;
      text-align: center;
    }

    /* 38. Brand Section Styles */
    .brand h2 {
      color: #caffca;
      margin-bottom: 15px;
      font-size: 28px;
      font-weight: bold;
    }
    .brand p {
      color: #f0fff0;
      font-size: 15px;
      line-height: 1.8;
      max-width: 650px;
      margin: auto;
    }

    /* 39. App Badge Styles */
    .app-badge {
      margin-top: 25px;
    }
    .app-badge img {
      width: 160px;
      transition: transform 0.3s;
    }
    .app-badge img:hover {
      transform: scale(1.05);
    }

    /* 40. Footer Links Styles */
    .footer-links {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      margin-top: 50px;
      flex-wrap: wrap;
      padding: 0 10px;
    }

    /* 41. Contact & Support Styles */
    .contact, .support {
      font-size: 14px;
    }
    .contact h3, .support h3 {
      margin-bottom: 12px;
      font-size: 18px;
      font-weight: 600;
    }
    .contact {
      text-align: left;
    }
    .support {
      text-align: right;
    }
    .support a {
      color: #d0ffd6;
      text-decoration: none;
      transition: color 0.3s;
    }
    .support a:hover {
      color: #ffffff;
    }

    /* 42. Copyright Styles */
    .copy {
      margin-top: 45px;
      font-size: 13px;
      color: #d9f9dc;
    }

    /* 43. Modal Styles */
    .modal {
      display: none;
      position: fixed;
      top:0; left:0;
      width:100%; height:100%;
      background: rgba(0,0,0,0.7);
      justify-content:center;
      align-items:center;
      z-index:999;
    }
    .modal-content {
      background:#fff;
      color:#333;
      padding:25px;
      border-radius:12px;
      max-width:600px;
      width:90%;
      text-align:left;
      position:relative;
    }
    .modal-content h2 {
      margin-bottom:10px;
      color:#2e7d32;
    }
    .modal-content p {
      line-height:1.6;
      font-size:14px;
    }
    .close {
      position:absolute;
      top:10px;
      right:15px;
      cursor:pointer;
      font-size:20px;
      font-weight:bold;
      color:#2e7d32;
    }

    /* 44. Desktop Styles (768px and up) */
    @media (min-width: 768px) {
      .topbar {
        padding: 16px 32px;
      }
      
      .logo {
        font-size: 28px;
      }
      
      .hamburger {
        display: flex;
      }
      
      .menu {
        width: 320px;
      }
      
      .menu-header {
        padding: 20px 24px;
        font-size: 22px;
      }
      
      .menu-item {
        padding: 16px 24px;
        font-size: 16px;
      }
      
      .home-search {
        max-width: 600px;
        margin: 20px auto;
      }
      
      .slide-container {
        height: 250px;
      }
      
      .slide-left h2 {
        font-size: 24px;
      }
      
      .slide-left .price {
        font-size: 22px;
      }
      
      .slide-right h3 {
        font-size: 40px;
      }
      
      .category-grid {
        grid-template-columns: repeat(6, 1fr);
        gap: 16px;
      }
      
      .category-bar {
        justify-content: center;
        padding: 15px 0;
      }
      
      .category {
        width: 90px;
        margin: 0 10px;
      }
      
      .category-icon {
        width: 60px;
        height: 60px;
      }
      
      .category img, .category svg {
        width: 32px;
        height: 32px;
      }
      
      .category span {
        font-size: 14px;
      }
      
      .product-grid {
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
      }
      
      .product-detail {
        display: flex;
        gap: 40px;
        align-items: flex-start;
      }
      
      .product-detail-image-container {
        width: 45%;
        flex-shrink: 0;
      }
      
      .product-detail-info {
        flex: 1;
      }
      
      .related-products-grid {
        grid-template-columns: repeat(4, 1fr);
      }
      
      .cart-item {
        padding: 20px 0;
      }
      
      .cart-item-image {
        width: 120px;
        height: 120px;
      }
      
      .footer {
        padding: 60px 40px;
      }
      
      .footer-links {
        padding: 0 40px;
      }
      
      .categories-grid {
        grid-template-columns: repeat(6, 1fr);
        gap: 20px;
        padding: 0 40px 40px;
      }
      
      .categories-card {
        padding: 16px 8px;
      }
      
      .categories-card img {
        height: 90px;
      }
      
      .categories-card p {
        font-size: 14px;
      }
    }

    /* 45. Large Desktop Styles (1200px and up) */
    @media (min-width: 1200px) {
      .topbar {
        padding: 16px 60px;
      }
      
      .product-grid {
        grid-template-columns: repeat(5, 1fr);
      }
      
      .related-products-grid {
        grid-template-columns: repeat(5, 1fr);
      }
      
      .categories-grid {
        grid-template-columns: repeat(8, 1fr);
      }
      
      .slide-container {
        max-width: 1200px;
        height: 300px;
      }
      
      .slide-left {
        padding: 30px;
      }
      
      .slide-left h2 {
        font-size: 28px;
      }
      
      .slide-left .price {
        font-size: 24px;
      }
      
      .slide-right h3 {
        font-size: 48px;
      }
    }

    /* 46. Extra Large Desktop Styles (1600px and up) */
    @media (min-width: 1600px) {
      .container, 
      .product-detail-container,
      .wishlist-container,
      .cart-container {
        max-width: 1400px;
      }
      
      .product-grid {
        grid-template-columns: repeat(6, 1fr);
      }
    }

    /* 47. Mobile Tap Highlight Removal */
    * {
      -webkit-tap-highlight-color: transparent;
    }

    /* 48. Focus Outline Removal */
    :focus {
      outline: none;
    }

    /* 49. Small Mobile Adjustments */
    @media (max-width:420px){
      .logo{font-size:22px}
      .hamburger{width:26px;height:26px}
    }

    /* 50. Button Tap Highlight Removal */
    button {
      -webkit-tap-highlight-color: transparent;
    }

    /* Orders Page Styles */
    #orders-page {
      background: white;
      min-height: 100vh;
      padding-top: 20px;
    }

    .orders-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 16px;
    }

    .orders-header {
      display: flex;
      align-items: center;
      gap: 10px;
      margin-bottom: 20px;
    }

    .orders-header h2 {
      font-size: 20px;
      color: #333;
    }

    .orders-count {
      background: #4CAF50;
      color: white;
      padding: 2px 8px;
      border-radius: 10px;
      font-size: 14px;
    }

    .order-item {
      background: #f9f9f9;
      border-radius: 8px;
      padding: 15px;
      margin-bottom: 20px;
    }

    .order-header {
      display: flex;
      justify-content: space-between;
      font-weight: 600;
      margin-bottom: 10px;
    }

    .order-item-detail {
      display: flex;
      justify-content: space-between;
      margin-bottom: 5px;
      color: #666;
    }

    .order-total {
      display: flex;
      justify-content: space-between;
      font-weight: 600;
      margin-top: 10px;
      border-top: 1px solid #eee;
      padding-top: 10px;
    }

    .order-status {
      text-align: right;
      color: #4CAF50;
      font-weight: 600;
      margin-top: 5px;
    }
*{margin:0;padding:0;box-sizing:border-box;font-family:"Inter",Arial,sans-serif;}
body{background:#f9f9f9;display:flex;flex-direction:column;min-height:100vh;position:relative;padding-bottom:80px;}

.header{background:#28a745;color:#fff;padding:15px;font-size:18px;font-weight:600;display:flex;align-items:center;gap:10px;} .payment-options{margin:20px;display:flex;flex-direction:column;gap:15px;flex:1;} .option{border:1px solid #ddd;padding:15px;border-radius:12px;cursor:pointer;background:#fff;transition:all 0.3s ease;display:flex;align-items:center;gap:12px;} .option:hover{transform:translateY(-3px);border-color:#28a745;} .option.selected{border:2px solid #28a745;background:#f3fff7;} .logo{width:55px;height:auto;object-fit:contain;} .option-title{font-size:16px;font-weight:600;} .option-desc{font-size:14px;color:#666;} .footer{position:fixed;bottom:0;left:0;width:100%;display:flex;justify-content:space-between;align-items:center;background:#fff;border-top:1px solid #ddd;padding:15px;z-index:10;} .price{font-size:18px;font-weight:600;color:#28a745;} .btn{background:#28a745;color:#fff;border:none;padding:12px 24px;font-size:16px;font-weight:600;border-radius:8px;cursor:pointer;} .btn:hover{background:#218838;} .btn:disabled{background:#ccc;cursor:not-allowed;}

/* Location logo style - IMPROVED */ .location-logo{width: 26px; height: 26px; margin-right: 5px; display: inline-flex; align-items: center; justify-content: center; flex-shrink: 0;} .location-logo svg{ width:100%; height:100%; display:block; } .location-icon-fg{ fill: #28a745; } .location-icon-hole{ fill: white; }

/* Popup */ .popup-overlay{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5);display:none;align-items:flex-end;justify-content:center;z-index:999;} .popup-box{background:#fff;width:100%;max-width:500px;border-top-left-radius:16px;border-top-right-radius:16px;padding:20px;animation:slideUp 0.3s ease-out;max-height:90vh;overflow-y:auto;} @keyframes slideUp{from{transform:translateY(100%);}to{transform:translateY(0);}} .popup-header{font-size:18px;font-weight:bold;margin-bottom:15px;color:#333;} .input-field{width:100%;padding:12px;margin-bottom:10px;border:1px solid #ccc;border-radius:8px;font-size:14px;font-family:inherit;} .input-field:focus{outline:none;border-color:#28a745;} .use-location{display:flex;align-items:center;gap:10px;color:#28a745;font-weight:600;cursor:pointer;padding:10px 0;font-size:16px;} #map{width:100%;height:200px;border-radius:10px;margin:10px 0;display:none;} #paymentMap{width:100%;height:200px;border-radius:10px;margin:10px 0;display:none;} .suggestions{border:1px solid #ccc;border-radius:6px;max-height:120px;overflow-y:auto;margin-top:-8px;margin-bottom:8px;display:none;background:white;z-index:1000;position:relative;} .suggestions div{padding:8px;cursor:pointer;font-size:14px;} .suggestions div:hover,.suggestions div.active{background:#f0f8f1;} .confirm-btn{width:100%;padding:12px;background:#28a745;color:white;border:none;border-radius:8px;font-size:16px;font-weight:600;cursor:pointer;font-family:inherit;} .confirm-btn:disabled{background:#ccc;cursor:not-allowed;}

/* Toast */ .toast{position: fixed; bottom: -80px; left: 50%; transform: translateX(-50%); background: #fff; color: #333; padding: 12px 18px; border-radius: 8px; box-shadow: 0 2px 6px rgba(0,0,0,0.2); display: flex; align-items: center; gap: 8px; font-size: 14px; font-weight: 500; opacity: 0; transition: all 0.4s ease; z-index: 2000;} .toast.show{bottom: 30px; opacity: 1;} .toast svg{ flex-shrink:0; }

/* Success */ .success-page{position:fixed;top:0;left:0;right:0;bottom:0;background:#fff;display:none;justify-content:center;align-items:center;flex-direction:column;z-index:9999;} .circle{width:100px;height:100px;border-radius:50%;background:#28a745;display:flex;justify-content:center;align-items:center;} .circle svg{width:60px;height:60px;stroke:white;stroke-width:6;fill:none;stroke-dasharray:100;stroke-dashoffset:100;animation:draw 1s forwards;} @keyframes draw{to{stroke-dashoffset:0;}} .success-text{margin-top:20px;font-size:18px;font-weight:600;color:#28a745;text-align:center;}

/* Loading indicator */ .loading{display: none; text-align: center; padding: 10px; color: #28a745;} .loading::after{content: ""; display: inline-block; width: 20px; height: 20px; border: 3px solid rgba(40, 167, 69, 0.3); border-radius: 50%; border-top-color: #28a745; animation: spin 1s ease-in-out infinite;} @keyframes spin{to {transform: rotate(360deg);}}

/* Location detection message */ .location-message{text-align: center; padding: 10px; color: #28a745; font-weight: 550; display: none; font-size: 16px;}

/* Map error message */ .map-error{color: #e74c3c; text-align: center; padding: 10px; display: none;}

/* Close button for popup */ .close-popup{position: absolute; top: 15px; right: 15px; width: 24px; height: 24px; cursor: pointer; opacity: 0.7;} .close-popup:hover{opacity: 1;} .close-popup:before,.close-popup:after {position: absolute; content: ' '; height: 20px; width: 2px; background-color: #333;} .close-popup:before{transform: rotate(45deg);} .close-popup:after{transform: rotate(-45deg);}

/* Pincode input container */ .pincode-container{position: relative;}

/* Address summary */ .address-summary{background: #f9f9f9; padding: 15px; border-radius: 8px; margin: 15px 20px; display: none;} .address-summary h3{margin-bottom: 10px; font-size: 16px; color: #333;} .address-details{font-size: 14px; line-height: 1.5; color: #555;}

/* Order button */ .order-btn{background: #ff6b00; width: calc(100% - 40px); padding: 15px; font-size: 16px; font-weight: 600; border-radius: 8px; border: none; color: white; cursor: pointer; margin: 15px 20px; display: none;} .order-btn:hover{background: #e65c00;}

/* Edit address button */ .edit-address{background: transparent; border: none; color: #28a745; text-decoration: underline; cursor: pointer; font-size: 14px; margin-top: 10px;}

/* Place Order Button in Footer */ .place-order-btn{background: #ff6b00; color: #fff; border: none; padding: 12px 24px; font-size: 16px; font-weight: 600; border-radius: 8px; cursor: pointer;} .place-order-btn:hover{background: #e65c00;} .place-order-btn:disabled{background: #ccc; cursor: not-allowed;}

:root{
  --green:#2ecc71;
  --green-dark:#27ae60;
}
*{box-sizing:border-box;margin:0;padding:0}
body{
  font-family: "Segoe UI", Roboto, Arial, sans-serif;
  background:#f4f6f8;
  padding-bottom:90px; /* space for fixed bar */
}

/* main pill */
.cart-bar{
  position:fixed;
  bottom:16px;
  left:50%;
  transform:translateX(-50%);
  width:calc(100% - 32px);
  max-width:960px;

  background:linear-gradient(180deg,var(--green),var(--green-dark));
  color:#fff;
  border-radius:20px;
  padding:16px 24px;
  display:flex;
  align-items:center;
  justify-content:space-between;
  box-shadow:0 8px 22px rgba(0,0,0,0.15);
  cursor:pointer;
  transition:transform 0.15s ease, box-shadow 0.15s ease;
  z-index:999;
  display: none; /* Initially hidden */
}
.cart-bar:hover{
  transform:translateX(-50%) translateY(-2px);
  box-shadow:0 10px 28px rgba(0,0,0,0.2);
}

.left{display:flex;align-items:center;gap:14px}

/* icon square */
.icon-square{
  width:54px;height:54px;
  background:rgba(255,255,255,0.12);
  border-radius:14px;
  display:flex;align-items:center;justify-content:center;
  flex-shrink:0;
}
.icon-square svg{
  width:30px; height:30px;
  stroke:#a9f0c4;
  fill:none;
  stroke-width:1.3;
  stroke-linecap:round;
  stroke-linejoin:round;
}

/* text */
.info{display:flex;flex-direction:column;line-height:1.2}
.info .items{font-size:16px;font-weight:500;opacity:0.9}
.info .price{font-size:20px;font-weight:700}

/* right side */
.view{display:flex;align-items:center;gap:10px;font-size:18px;font-weight:600}
.chev{width:16px;height:16px;transform:translateY(1px)}

@media (max-width:420px){
  .cart-bar{padding:12px 16px;border-radius:16px;bottom:12px}
  .icon-square{width:46px;height:46px}
  .icon-square svg{width:26px;height:26px}
  .info .items{font-size:14px}
  .info .price{font-size:17px}
  .view{font-size:16px}
}
  </style>
</head>
<body>
  <!-- 4. Main container wrapping all content -->
  <div class="main-container">
    <!-- 5. Header section (hidden on product detail page) -->
    <div id="header-section">
      <!-- 6. Top navigation bar -->
      <header class="topbar" role="banner" aria-label="Top navigation">
        <div class="left">
          <!-- 7. Hamburger menu button -->
          <button class="hamburger" id="menuToggle" aria-label="Open menu">
            <span></span>
            <span></span>
            <span></span>
          </button>
          <!-- 8. Logo -->
          <div class="logo" aria-hidden="true">brixomart</div>
        </div>
        
        <!-- 9. Header actions (wishlist and cart) -->
        <nav class="actions" role="navigation" aria-label="Header actions">
          <!-- 10. Wishlist Icon -->
          <button class="icon-btn" aria-label="Wishlist" onclick="showWishlist()">
            <svg viewBox="0 0 24 24" fill="#ff5a5f" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
              <path d="M12 4.248c-3.148-5.402-12-3.056-12 2.944 0 4.418 6.582 9.76 12 14.808 5.418-5.048 12-10.39 12-14.808 0-6-8.852-8.346-12-2.944z"/>
            </svg>
          </button>
          
        </nav>
      </header>

      <!-- 13. Address Bar -->
      <div class="address-bar" id="addressBar">
          <span id="addressIcon">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="green" viewBox="0 0 24 24">
                  <path d="M12 2C8.14 2 5 5.14 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.86-3.14-7-7-7zm0 9.5a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5z"/>
              </svg>
          </span>
          <span class="address-text" id="currentAddress">Select your delivery location...</span>
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="#000" viewBox="0 0 24 24">
              <path d="M9 6l6 6-6 6"/>
          </svg>
      </div>

      <!-- 14. Home Page Search Bar -->
      <div class="home-search">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#6B7280" viewBox="0 0 30 30">
              <path d="M13 3C7.489 3 3 7.489 3 13s4.489 10 10 10a9.95 9.95 0 0 0 6.322-2.264l5.971 5.971a1 1 0 1 0 1.414-1.414l-5.97-5.97A9.95 9.95 0 0 0 23 13c0-5.511-4.489-10-10-10m0 2c4.43 0 8 3.57 8 8s-3.57 8-8 8-8-3.57-8-8 3.57-8 8-8"/>
          </svg>
          <input type="text" placeholder="Search for products...">
      </div>

      <!-- 15. Grocery Offers Slider -->
      <div class="swiper">  
          <div class="swiper-wrapper">  
            <!-- 16. Slide 1 -->  
            <div class="swiper-slide">  
                <div class="slide-container">  
                    <div class="slide-left">  
                        <h2>Fresh Vegetables</h2>  
                        <div class="price">From ₹29/Kg*</div>  
                        <p>Fresh farm fresh and healthy.</p>  
                        <small>*Prices may vary.</small>  
                    </div>  
                    <div class="slide-right">  
                        <div class="sale-badge">BRIXO MART SALE</div>  
                        <h3>Organic</h3>  
                        <p>Direct from farms to your table</p>  
                    </div>  
                </div>  
            </div>  
      
            <!-- 17. Slide 2 -->  
            <div class="swiper-slide">  
                <div class="slide-container">  
                    <div class="slide-left">  
                        <h2>Daily Dairy</h2>  
                        <div class="price">From ₹20/Litre*</div>  
                        <p>Pure and fresh milk products.</p>  
                        <small>*Prices may vary.</small>  
                    </div>  
                    <div class="slide-right">  
                        <div class="sale-badge">BRIXO MART SALE</div>  
                        <h3>100% Fresh</h3>  
                        <p>Milk, butter, paneer & more</p>  
                    </div>  
                </div>  
            </div>  
      
            <!-- 18. Slide 3 -->  
            <div class="swiper-slide">  
                <div class="slide-container">  
                    <div class="slide-left">  
                        <h2>Bakery Delights</h2>  
                        <div class="price">From ₹15*</div>  
                        <p>Freshly baked everyday.</p>  
                        <small>*Prices may vary.</small>  
                    </div>  
                    <div class="slide-right">  
                        <div class="sale-badge">BRIXO MART SALE</div>  
                        <h3>Hot & Soft</h3>  
                        <p>Bread, cakes, pastries</p>  
                    </div>  
                </div>  
            </div>  
      
            <!-- 19. Slide 4 -->  
            <div class="swiper-slide">  
                <div class="slide-container">  
                    <div class="slide-left">  
                        <h2>Groceries</h2>  
                        <div class="price">From ₹49*</div>  
                        <p>Everything your kitchen needs.</p>  
                        <small>*Prices may vary.</small>  
                    </div>  
                    <div class="slide-right">  
                        <div class="sale-badge">BRIXO MART SALE</div>  
                        <h3>All in One</h3>  
                        <p>Rice, dal, oil & more</p>  
                    </div>  
                </div>  
            </div>  
      
            <!-- 20. Slide 5 -->  
            <div class="swiper-slide">  
                <div class="slide-container">  
                    <div class="slide-left">  
                        <h2>Snacks & Beverages</h2>  
                        <div class="price">From ₹10*</div>  
                        <p>Perfect for every occasion.</p>  
                        <small>*Prices may vary.</small>  
                    </div>  
                    <div class="slide-right">  
                        <div class="sale-badge">BRIXO MART SALE</div>  
                        <h3>Taste</h3>  
                        <p>Chips, biscuits, soft drinks</p>  
                    </div>  
                </div>  
            </div>  
      
            <!-- 21. Slide 6 -->  
            <div class="swiper-slide">  
                <div class="slide-container">  
                    <div class="slide-left">  
                        <h2>Household Essentials</h2>  
                        <div class="price">From ₹19*</div>  
                        <p>Daily use products at best price.</p>  
                        <small>*Prices may vary.</small>  
                    </div>  
                    <div class="slide-right">  
                        <div class="sale-badge">BRIXO MART SALE</div>  
                        <h3>Essentials</h3>  
                        <p>Cleaning, personal care & more</p>  
                    </div>  
                </div>  
            </div>  
          </div>  
            
          <!-- 22. Pagination for slider -->  
          <div class="swiper-pagination"></div>  
      </div>  

      <!-- 23. Category Navigation -->
      <div class="category-container">
          <div class="category-bar">
            <!-- 24. First category with green grid icon -->
            <div class="category active">
              <div class="category-icon">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="#4CAF50" stroke-width="2">
                  <rect x="3" y="3" width="7" height="7" rx="1" ry="1"/>
                  <rect x="14" y="3" width="7" height="7" rx="1" ry="1"/>
                  <rect x="3" y="14" width="7" height="7" rx="1" ry="1"/>
                  <rect x="14" y="14" width="7" height="7" rx="1" ry="1"/>
                </svg>
              </div>
              <span>Category</span>  <!-- Changed from "All" to "Category" -->
            </div>

            <!-- 25. Additional category items -->
            <div class="category">
              <div class="category-icon">
                <img src="https://cdn-icons-png.flaticon.com/512/892/892458.png" alt="Fashion">
              </div>
              <span>Fashion</span>
            </div>
            <div class="category">
              <div class="category-icon">
                <img src="https://cdn-icons-png.flaticon.com/512/929/929564.png" alt="Mobiles">
              </div>
              <span>Mobiles</span>
            </div>
            <div class="category">
              <div class="category-icon">
                <img src="https://cdn-icons-png.flaticon.com/512/1041/1041916.png" alt="Electronics">
              </div>
              <span>Electronics</span>
            </div>
            <div class="category">
              <div class="category-icon">
                <img src="https://cdn-icons-png.flaticon.com/512/1041/1041913.png" alt="Appliances">
              </div>
              <span>Appliances</span>
            </div>
            <div class="category">
              <div class="category-icon">
                <img src="https://cdn-icons-png.flaticon.com/512/3075/3075977.png" alt="Grocery">
              </div>
              <span>Grocery</span>
            </div>
            <div class="category">
              <div class="category-icon">
                <img src="https://cdn-icons-png.flaticon.com/512/616/616408.png" alt="Toys">
              </div>
              <span>Toys</span>
            </div>
            <div class="category">
              <div class="category-icon">
                <img src="https://cdn-icons-png.flaticon.com/512/2936/2936886.png" alt="Beauty">
              </div>
              <span>Beauty</span>
            </div>
            <div class="category">
              <div class="category-icon">
                <img src="https://cdn-icons-png.flaticon.com/512/869/869869.png" alt="Home">
              </div>
              <span>Home</span>
            </div>
          </div>
      </div>
    </div>

    <!-- 26. Menu Overlay -->
    <div class="overlay" id="overlay"></div>
    
    <!-- 27. Side Menu -->
    <div class="menu" id="menu">
      <div class="menu-header">brixo mart</div>
      <div class="menu-item" onclick="showCategories()">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
          <polyline points="9 22 9 12 15 12 15 22"></polyline>
        </svg>
        <span>Home</span>
      </div>
      <div class="menu-item" onclick="showWishlist()">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M12 4.248c-3.148-5.402-12-3.056-12 2.944 0 4.418 6.582 9.76 12 14.808 5.418-5.048 12-10.39 12-14.808 0-6-8.852-8.346-12-2.944z"/>
        </svg>
        <span>Wishlist</span>
      </div>
      <div class="menu-item" onclick="showOrders()">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
          <polyline points="14 2 14 8 20 8"></polyline>
          <line x1="16" y1="13" x2="8" y2="13"></line>
          <line x1="16" y1="17" x2="8" y2="17"></line>
          <polyline points="10 9 9 9 8 9"></polyline>
        </svg>
        <span>Orders</span>
      </div>
      <div class="menu-item" onclick="showCart()">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path>
          <line x1="3" y1="6" x2="21" y2="6"></line>
          <path d="M16 10a4 4 0 0 1-8 0"></path>
        </svg>
        <span>Cart</span>
      </div>
      <div class="menu-item" onclick="showCategoriesGrid()">
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
          <rect x="3" y="3" width="7" height="7"></rect>
          <rect x="14" y="3" width="7" height="7"></rect>
          <rect x="14" y="14" width="7" height="7"></rect>
          <rect x="3" y="14" width="7" height="7"></rect>
        </svg>
        <span>Categories</span>
      </div>
    </div>

    <!-- 28. Location Popup -->
    <div class="popup-overlay" id="locationPopup">
        <div class="popup-box">
            <div class="close-popup" id="closePopup"></div>
            <div class="popup-header">Select your Location</div>
            <div class="location-message" id="locationMessage">
              <span class="location-logo" aria-hidden="true">
                <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true">
                  <path class="location-icon-fg" d="M12 3.2a8.8 8.8 0 1 0 0 17.6 8.8 8.8 0 0 0 0-17.6z"/>
                  <rect class="location-icon-fg" x="11.2" y="0.6" width="1.6" height="3.2" rx="0.8"/>
                  <rect class="location-icon-fg" x="11.2" y="20.2" width="1.6" height="3.2" rx="0.8"/>
                  <rect class="location-icon-fg" x="0.6" y="11.2" width="3.2" height="1.6" rx="0.8"/>
                  <rect class="location-icon-fg" x="20.2" y="11.2" width="3.2" height="1.6" rx="0.8"/>
                  <circle class="location-icon-hole" cx="12" cy="12" r="4.2"/>
                </svg>
              </span>
              Detecting your location...
            </div>
            <div class="map-error" id="mapError">Unable to load map. Please check your address manually.</div>
            <div class="popup-search">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#6B7280" viewBox="0 0 30 30">
                    <path d="M13 3C7.489 3 3 7.489 3 13s4.489 10 10 10a9.95 9.95 0 0 0 6.322-2.264l5.971 5.971a1 1 0 1 0 1.414-1.414l-5.97-5.97A9.95 9.95 0 0 0 23 13c0-5.511-4.489-10-10-10m0 2c4.43 0 8 3.57 8 8s-3.57 8-8 8-8-3.57-8-8 3.57-8 8-8"/>
                </svg>
                <input type="text" id="popupSearchInput" placeholder="Search by area, street, pin code">
            </div>
            <div class="suggestions" id="suggestions"></div>
            <div class="use-location" id="useCurrentLocation">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="green" viewBox="0 0 24 24">
                    <path d="M12 8a4 4 0 100 8 4 4 0 000-8zm0-6a1 1 0 011 1v1.07A8.001 8.001 0 0120.93 11H22a1 1 0 110 2h-1.07A8.001 8.001 0 0113 20.93V22a1 1 0 11-2 0v-1.07A8.001 8.001 0 013.07 13H2a1 1 0 110-2h1.07A8.001 8.001 0 0111 3.07V2a1 1 0 011-1z"/>
                </svg>
                Use current location
            </div>
            <div id="map"></div>
            <div class="loading" id="locationLoading"></div>
            <button class="confirm-btn" id="confirmAddressBtn">Confirm Location</button>
        </div>
    </div>

    <!-- 29. Search Overlay -->
    <div class="search-overlay" id="searchOverlay">
      <div class="search-header">
        <button class="back-btn" id="closeSearch"><i class="fa-solid fa-arrow-left"></i></button>
        <div class="search-bar">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 30">
            <path d="M13 3C7.489 3 3 7.489 3 13s4.489 10 10 10a9.95 9.95 0 0 0 6.322-2.264l5.971 5.971a1 1 0 1 0 1.414-1.414l-5.97-5.97A9.95 9.95 0 0 0 23 13c0-5.511-4.489-10-10-10m0 2c4.43 0 8 3.57 8 8s-3.57 8-8 8-8-3.57-8-8 3.57-8 8-8"/>
          </svg>
          <input type="text" id="searchInput" placeholder="Search for products...">
        </div>
      </div>
    </div>

    <!-- 30. Main Content Area -->
    <div class="content">
      <!-- 31. Categories Page -->
      <div id="categories-page" class="container">
        <!-- 32. Fruits & Vegetables Section -->
        <div class="category-section">
          <h2 class="section-title">Fruits & Vegetables</h2>
          <div class="category-grid">
            <div class="category-card" onclick="showProducts('Apples')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Apple" class="category-image" alt="Apple">
              </div>
              <p class="category-name">Apples</p>
            </div>
            <div class="category-card" onclick="showProducts('Bananas')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Banana" class="category-image" alt="Banana">
              </div>
              <p class="category-name">Bananas</p>
            </div>
            <div class="category-card" onclick="showProducts('Oranges')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Orange" class="category-image" alt="Orange">
              </div>
              <p class="category-name">Oranges</p>
            </div>
            <div class="category-card" onclick="showProducts('Grapes')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Grapes" class="category-image" alt="Grapes">
              </div>
              <p class="category-name">Grapes</p>
            </div>
            <div class="category-card" onclick="showProducts('Tomatoes')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Tomato" class="category-image" alt="Tomato">
              </div>
              <p class="category-name">Tomatoes</p>
            </div>
            <div class="category-card" onclick="showProducts('Potatoes')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Potato" class="category-image" alt="Potato">
              </div>
              <p class="category-name">Potatoes</p>
            </div>
            <div class="category-card" onclick="showProducts('Onions')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Onion" class="category-image" alt="Onion">
              </div>
              <p class="category-name">Onions</p>
            </div>
            <div class="category-card" onclick="showProducts('Garlic')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Garlic" class="category-image" alt="Garlic">
              </div>
              <p class="category-name">Garlic</p>
            </div>
            <div class="category-card" onclick="showProducts('Organic')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Organic" class="category-image" alt="Organic">
              </div>
              <p class="category-name">Organic</p>
            </div>
          </div>
        </div>

        <!-- 33. Dairy & Eggs Section -->
        <div class="category-section">
          <h2 class="section-title">Dairy & Eggs</h2>
          <div class="category-grid">
            <div class="category-card" onclick="showProducts('Milk')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Milk" class="category-image" alt="Milk">
              </div>
              <p class="category-name">Milk</p>
            </div>
            <div class="category-card" onclick="showProducts('Cheese')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Cheese" class="category-image" alt="Cheese">
              </div>
              <p class="category-name">Cheese</p>
            </div>
            <div class="category-card" onclick="showProducts('Butter')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Butter" class="category-image" alt="Butter">
              </div>
              <p class="category-name">Butter</p>
            </div>
            <div class="category-card" onclick="showProducts('Yogurt')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Yogurt" class="category-image" alt="Yogurt">
              </div>
              <p class="category-name">Yogurt</p>
            </div>
            <div class="category-card" onclick="showProducts('Paneer')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Paneer" class="category-image" alt="Paneer">
              </div>
              <p class="category-name">Paneer</p>
            </div>
            <div class="category-card" onclick="showProducts('Eggs')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Eggs" class="category-image" alt="Eggs">
              </div>
              <p class="category-name">Eggs</p>
            </div>
            <div class="category-card" onclick="showProducts('Curd')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Curd" class="category-image" alt="Curd">
              </div>
              <p class="category-name">Curd</p>
            </div>
            <div class="category-card" onclick="showProducts('Ghee')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Ghee" class="category-image" alt="Ghee">
              </div>
              <p class="category-name">Ghee</p>
            </div>
            <div class="category-card" onclick="showProducts('Cream')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Cream" class="category-image" alt="Cream">
              </div>
              <p class="category-name">Cream</p>
            </div>
          </div>
        </div>

        <!-- 34. Kitchen Staples Section -->
        <div class="category-section">
          <h2 class="section-title">Kitchen Staples</h2>
          <div class="category-grid">
            <div class="category-card" onclick="showProducts('Rice')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Rice" class="category-image" alt="Rice">
              </div>
              <p class="category-name">Rice</p>
            </div>
            <div class="category-card" onclick="showProducts('Wheat')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Wheat" class="category-image" alt="Wheat">
              </div>
              <p class="category-name">Wheat</p>
            </div>
            <div class="category-card" onclick="showProducts('Dal')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Dal" class="category-image" alt="Dal">
              </div>
              <p class="category-name">Dal</p>
            </div>
            <div class="category-card" onclick="showProducts('Sugar')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Sugar" class="category-image" alt="Sugar">
              </div>
              <p class="category-name">Sugar</p>
            </div>
            <div class="category-card" onclick="showProducts('Salt')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Salt" class="category-image" alt="Salt">
              </div>
              <p class="category-name">Salt</p>
            </div>
            <div class="category-card" onclick="showProducts('Oil')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Oil" class="category-image" alt="Oil">
              </div>
              <p class="category-name">Oil</p>
            </div>
            <div class="category-card" onclick="showProducts('Ghee')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Ghee" class="category-image" alt="Ghee">
              </div>
              <p class="category-name">Ghee</p>
            </div>
            <div class="category-card" onclick="showProducts('Flour')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Flour" class="category-image" alt="Flour">
              </div>
              <p class="category-name">Flour</p>
            </div>
            <div class="category-card" onclick="showProducts('Poha')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Poha" class="category-image" alt="Poha">
              </div>
              <p class="category-name">Poha</p>
            </div>
          </div>
        </div>

        <!-- 35. Snacks & Beverages Section -->
        <div class="category-section">
          <h2 class="section-title">Snacks & Beverages</h2>
          <div class="category-grid">
            <div class="category-card" onclick="showProducts('Biscuits')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Biscuits" class="category-image" alt="Biscuits">
              </div>
              <p class="category-name">Biscuits</p>
            </div>
            <div class="category-card" onclick="showProducts('Noodles')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Noodles" class="category-image" alt="Noodles">
              </div>
              <p class="category-name">Noodles</p>
            </div>
            <div class="category-card" onclick="showProducts('Chips')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Chips" class="category-image" alt="Chips">
              </div>
              <p class="category-name">Chips</p>
            </div>
            <div class="category-card" onclick="showProducts('Chocolates')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Chocolates" class="category-image" alt="Chocolates">
              </div>
              <p class="category-name">Chocolates</p>
            </div>
            <div class="category-card" onclick="showProducts('Soft Drinks')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Soft+Drinks" class="category-image" alt="Soft Drinks">
              </div>
              <p class="category-name">Soft Drinks</p>
            </div>
            <div class="category-card" onclick="showProducts('Tea')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Tea" class="category-image" alt="Tea">
              </div>
              <p class="category-name">Tea</p>
            </div>
            <div class="category-card" onclick="showProducts('Juices')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Juices" class="category-image" alt="Juices">
              </div>
              <p class="category-name">Juices</p>
            </div>
            <div class="category-card" onclick="showProducts('Energy Drinks')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Energy+Drinks" class="category-image" alt="Energy Drinks">
              </div>
              <p class="category-name">Energy Drinks</p>
            </div>
            <div class="category-card" onclick="showProducts('Namkeen')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Namkeen" class="category-image" alt="Namkeen">
              </div>
              <p class="category-name">Namkeen</p>
            </div>
          </div>
        </div>

        <!-- 36. Personal Care Section -->
        <div class="category-section">
          <h2 class="section-title">Personal Care</h2>
          <div class="category-grid">
            <div class="category-card" onclick="showProducts('Shampoo')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Shampoo" class="category-image" alt="Shampoo">
              </div>
              <p class="category-name">Shampoo</p>
            </div>
            <div class="category-card" onclick="showProducts('Soap')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Soap" class="category-image" alt="Soap">
              </div>
              <p class="category-name">Soap</p>
            </div>
            <div class="category-card" onclick="showProducts('Toothpaste')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Toothpaste" class="category-image" alt="Toothpaste">
              </div>
              <p class="category-name">Toothpaste</p>
            </div>
            <div class="category-card" onclick="showProducts('Toothbrush')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Toothbrush" class="category-image" alt="Toothbrush">
              </div>
              <p class="category-name">Toothbrush</p>
            </div>
            <div class="category-card" onclick="showProducts('Face Wash')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Face+Wash" class="category-image" alt="Face Wash">
              </div>
              <p class="category-name">Face Wash</p>
            </div>
            <div class="category-card" onclick="showProducts('Deodorant')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Deodorant" class="category-image" alt="Deodorant">
              </div>
              <p class="category-name">Deodorant</p>
            </div>
            <div class="category-card" onclick="showProducts('Razor')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Razor" class="category-image" alt="Razor">
              </div>
              <p class="category-name">Razor</p>
            </div>
            <div class="category-card" onclick="showProducts('Shaving Cream')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Shaving+Cream" class="category-image" alt="Shaving Cream">
              </div>
              <p class="category-name">Shaving Cream</p>
            </div>
            <div class="category-card" onclick="showProducts('Sanitary Pads')">
              <div class="category-image-container">
                <img src="https://via.placeholder.com/100x100?text=Sanitary+Pads" class="category-image" alt="Sanitary Pads">
              </div>
              <p class="category-name">Sanitary Pads</p>
            </div>
          </div>
        </div>
      </div>

      <!-- 37. Categories Grid Page (hidden by default) -->
      <div id="categories-grid-page" class="hidden">
        <!-- 38. Categories Header -->
        <div class="categories-header">
          <div>Categories</div>
          <i class="fa-solid fa-magnifying-glass search-icon" id="openSearch"></i>
        </div>

        <!-- 39. Fruits & Vegetables Section -->
        <div class="categories-section-title">Fruits & Vegetables</div>
        <div class="categories-grid">
          <div class="categories-card" onclick="showProducts('Fresh Fruits')"><img src="https://via.placeholder.com/100x70"><p>Fresh Fruits</p></div>
          <div class="categories-card" onclick="showProducts('Fresh Vegetables')"><img src="https://via.placeholder.com/100x70"><p>Fresh Vegetables</p></div>
          <div class="categories-card" onclick="showProducts('Organic Produce')"><img src="https://via.placeholder.com/100x70"><p>Organic Produce</p></div>
          <div class="categories-card" onclick="showProducts('Exotic Fruits')"><img src="https://via.placeholder.com/100x70"><p>Exotic Fruits</p></div>
        </div>

        <!-- 40. Dairy Section -->
        <div class="categories-section-title">Dairy, Bakery & Eggs</div>
        <div class="categories-grid">
          <div class="categories-card" onclick="showProducts('Milk')"><img src="https://via.placeholder.com/100x70"><p>Milk</p></div>
          <div class="categories-card" onclick="showProducts('Cheese')"><img src="https://via.placeholder.com/100x70"><p>Cheese</p></div>
          <div class="categories-card" onclick="showProducts('Bread')"><img src="https://via.placeholder.com/100x70"><p>Bread</p></div>
          <div class="categories-card" onclick="showProducts('Eggs')"><img src="https://via.placeholder.com/100x70"><p>Eggs</p></div>
        </div>
        
        <!-- 41. Grocery Staples Section -->
        <div class="categories-section-title">Grocery Staples</div>
        <div class="categories-grid">
          <div class="categories-card" onclick="showProducts('Rice')"><img src="https://via.placeholder.com/100x70"><p>Rice</p></div>
          <div class="categories-card" onclick="showProducts('Atta & Flour')"><img src="https://via.placeholder.com/100x70"><p>Atta & Flour</p></div>
          <div class="categories-card" onclick="showProducts('Pulses')"><img src="https://via.placeholder.com/100x70"><p>Pulses</p></div>
          <div class="categories-card" onclick="showProducts('Pulses')"><img src="https://via.placeholder.com/100x70"><p>Pulses</p></div>
          <div class="categories-card" onclick="showProducts('Oil & Ghee')"><img src="https://via.placeholder.com/100x70"><p>Oil & Ghee</p></div>
          <div class="categories-card" onclick="showProducts('Sugar & Salt')"><img src="https://via.placeholder.com/100x70"><p>Sugar & Salt</p></div>
          <div class="categories-card" onclick="showProducts('Dry Fruits')"><img src="https://via.placeholder.com/100x70"><p>Dry Fruits</p></div>
        </div>

        <!-- 42. Household Essentials Section -->
        <div class="categories-section-title">Household Essentials</div>
        <div class="categories-grid">
          <div class="categories-card" onclick="showProducts('Cleaning Supplies')"><img src="https://via.placeholder.com/100x70"><p>Cleaning Supplies</p></div>
          <div class="categories-card" onclick="showProducts('Detergents')"><img src="https://via.placeholder.com/100x70"><p>Detergents</p></div>
          <div class="categories-card" onclick="showProducts('Kitchen Tools')"><img src="https://via.placeholder.com/100x70"><p>Kitchen Tools</p></div>
          <div class="categories-card" onclick="showProducts('Paper Products')"><img src="https://via.placeholder.com/100x70"><p>Paper Products</p></div>
        </div>

        <!-- 43. Snacks & Drinks Section -->
        <div class="categories-section-title">Snacks & Drinks</div>
        <div class="categories-grid">
          <div class="categories-card" onclick="showProducts('Cold Drinks')"><img src="https://via.placeholder.com/100x70"><p>Cold Drinks</p></div>
          <div class="categories-card" onclick="showProducts('Juices')"><img src="https://via.placeholder.com/100x70"><p>Juices</p></div>
          <div class="categories-card" onclick="showProducts('Ice Creams')"><img src="https://via.placeholder.com/100x70"><p>Ice Creams</p></div>
          <div class="categories-card" onclick="showProducts('Frozen Snacks')"><img src="https://via.placeholder.com/100x70"><p>Frozen Snacks</p></div>
          <div class="categories-card" onclick="showProducts('Chips')"><img src="https://via.placeholder.com/100x70"><p>Chips</p></div>
          <div class="categories-card" onclick="showProducts('Namkeens')"><img src="https://via.placeholder.com/100x70"><p>Namkeens</p></div>
          <div class="categories-card" onclick="showProducts('Chocolates')"><img src="https://via.placeholder.com/100x70"><p>Chocolates</p></div>
          <div class="categories-card" onclick="showProducts('Biscuits')"><img src="https://via.placeholder.com/100x70"><p>Biscuits</p></div>
          <div class="categories-card" onclick="showProducts('Cakes & Muffins')"><img src="https://via.placeholder.com/100x70"><p>Cakes & Muffins</p></div>
          <div class="categories-card" onclick="showProducts('Energy Drinks')"><img src="https://via.placeholder.com/100x70"><p>Energy Drinks</p></div>
          <div class="categories-card" onclick="showProducts('Tea')"><img src="https://via.placeholder.com/100x70"><p>Tea</p></div>
          <div class="categories-card" onclick="showProducts('Coffee')"><img src="https://via.placeholder.com/100x70"><p>Coffee</p></div>
          <div class="categories-card" onclick="showProducts('Noodles')"><img src="https://via.placeholder.com/100x70"><p>Noodles</p></div>
        </div>

        <!-- 44. Beauty & Personal Care Section -->
        <div class="categories-section-title">Beauty & Personal Care</div>
        <div class="categories-grid">
          <div class="categories-card" onclick="showProducts('Bath & Body')"><img src="https://via.placeholder.com/100x70"><p>Bath & Body</p></div>
          <div class="categories-card" onclick="showProducts('Hair Care')"><img src="https://via.placeholder.com/100x70"><p>Hair Care</p></div>
          <div class="categories-card" onclick="showProducts('Skincare')"><img src="https://via.placeholder.com/100x70"><p>Skincare</p></div>
          <div class="categories-card" onclick="showProducts('Makeup')"><img src="https://via.placeholder.com/100x70"><p>Makeup</p></div>
          <div class="categories-card" onclick="showProducts('Fragrances')"><img src="https://via.placeholder.com/100x70"><p>Fragrances</p></div>
          <div class="categories-card" onclick="showProducts('Oral Care')"><img src="https://via.placeholder.com/100x70"><p>Oral Care</p></div>
          <div class="categories-card" onclick="showProducts('Men's Grooming')"><img src="https://via.placeholder.com/100x70"><p>Men's Grooming</p></div>
          <div class="categories-card" onclick="showProducts('Baby Care')"><img src="https://via.placeholder.com/100x70"><p>Baby Care</p></div>
        </div>

        <!-- 45. Electronics Section -->
        <div class="categories-section-title">Electronics</div>
        <div class="categories-grid">
          <div class="categories-card" onclick="showProducts('Mobiles')"><img src="https://via.placeholder.com/100x70"><p>Mobiles</p></div>
          <div class="categories-card" onclick="showProducts('Headphones')"><img src="https://via.placeholder.com/100x70"><p>Headphones</p></div>
          <div class="categories-card" onclick="showProducts('Speakers')"><img src="https://via.placeholder.com/100x70"><p>Speakers</p></div>
          <div class="categories-card" onclick="showProducts('Smart Watches')"><img src="https://via.placeholder.com/100x70"><p>Smart Watches</p></div>
          <div class="categories-card" onclick="showProducts('Laptops')"><img src="https://via.placeholder.com/100x70"><p>Laptops</p></div>
          <div class="categories-card" onclick="showProducts('Chargers')"><img src="https://via.placeholder.com/100x70"><p>Chargers</p></div>
          <div class="categories-card" onclick="showProducts('Power Banks')"><img src="https://via.placeholder.com/100x70"><p>Power Banks</p></div>
          <div class="categories-card" onclick="showProducts('Home Appliances')"><img src="https://via.placeholder.com/100x70"><p>Home Appliances</p></div>
        </div>

        <!-- 46. Baby & Toys Section -->
        <div class="categories-section-title">Baby & Toys</div>
        <div class="categories-grid">
          <div class="categories-card" onclick="showProducts('Baby Food')"><img src="https://via.placeholder.com/100x70"><p>Baby Food</p></div>
          <div class="categories-card" onclick="showProducts('Baby Diapers')"><img src="https://via.placeholder.com/100x70"><p>Baby Diapers</p></div>
          <div class="categories-card" onclick="showProducts('Baby Skincare')"><img src="https://via.placeholder.com/100x70"><p>Baby Skincare</p></div>
          <div class="categories-card" onclick="showProducts('Baby Wipes')"><img src="https://via.placeholder.com/100x70"><p>Baby Wipes</p></div>
          <div class="categories-card" onclick="showProducts('Soft Toys')"><img src="https://via.placeholder.com/100x70"><p>Soft Toys</p></div>
          <div class="categories-card" onclick="showProducts('Educational Toys')"><img src="https://via.placeholder.com/100x70"><p>Educational Toys</p></div>
          <div class="categories-card" onclick="showProducts('Games')"><img src="https://via.placeholder.com/100x70?text=Games"><p>Games</p></div>
          <div class="categories-card" onclick="showProducts('Ride-ons')"><img src="https://via.placeholder.com/100x70"><p>Ride-ons</p></div>
        </div>
      </div>

      <!-- 47. Products Page (hidden by default) -->
      <div id="products-page" class="container full-screen-products hidden">
        <button class="back-button" onclick="showCategories()">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M15 18L9 12L15 6" stroke="#2e7d32" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          <span>Back to Categories</span>
        </button>
        
        <h2 id="product-category-title" class="section-title">Products</h2>
        
        <div class="product-grid" id="products-grid">
          <!-- Products will be dynamically inserted here -->
        </div>
      </div>

      <!-- 48. Product Detail Page (hidden by default) -->
      <div id="product-detail-page" class="hidden">
        <div class="product-detail-container">
          <button class="back-button" onclick="showProducts(currentCategory)">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15 18L9 12L15 6" stroke="#2e7d32" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <span>Back to Products</span>
          </button>
          
          <div class="product-detail">
            <div class="product-detail-image-container">
              <img id="detail-product-image" class="product-detail-image" src="" alt="">
            </div>
            <div class="product-detail-info">
              <h2 id="detail-product-title" class="product-detail-title"></h2>
              <div id="detail-product-price" class="product-detail-price"></div>
              <div id="detail-product-discount" class="discount-text"></div>
              <p id="detail-product-description" class="product-detail-description"></p>
              
              <div class="product-detail-actions">
                <div class="product-detail-qty">
                  <button onclick="decreaseDetailQty()">-</button>
                  <span id="detail-qty">1</span>
                  <button onclick="increaseDetailQty()">+</button>
                </div>
                <button class="add-to-cart-btn" onclick="addDetailToCart()">
  Add to Cart
</button>

              </div>
            </div>
          </div>
          
          <!-- 49. Related Products Section -->
          <div class="related-products">
            <h2>Related Products</h2>
            <div class="related-products-grid" id="related-products-grid">
              <!-- Related products will be dynamically inserted here -->
            </div>
          </div>
        </div>
      </div>

      <!-- 50. Wishlist Page (hidden by default) -->
      <div id="wishlist-page" class="hidden">
        <div class="wishlist-container">
          <button class="back-button" onclick="showCategories()">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15 18L9 12L15 6" stroke="#2e7d32" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <span>Back to Home</span>
          </button>
          
          <div class="wishlist-header">
            <h2>My Wishlist</h2>
            <div class="wishlist-count" id="wishlist-count">0</div>
          </div>
          
          <div class="product-grid" id="wishlist-grid">
            <!-- Wishlist items will be dynamically inserted here -->
            <div class="empty-state">
              <svg width="48" height="48" viewBox="0 0 24 24" fill="#ccc">
                <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
              </svg>
              <p>Your wishlist is empty</p>
              <button onclick="showCategories()" class="continue-shopping-btn">Continue Shopping</button>
            </div>
          </div>
        </div>
      </div>
      
      <!-- 51. Cart Page (hidden by default) -->
      <div id="cart-page" class="hidden">
        <div class="cart-container">
          <button class="back-button" onclick="showCategories()">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15 18L9 12L15 6" stroke="#2e7d32" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <span>Back to Home</span>
          </button>
          
          <div class="cart-header">
            <h2>My Cart</h2>
            <div class="cart-count" id="cart-count">0</div>
          </div>
          
          <div class="cart-items" id="cart-items">
            <!-- Cart items will be dynamically inserted here -->
            <div class="empty-state">
              <p>Your cart is empty</p>
              <button onclick="showCategories()" class="continue-shopping-btn">Continue Shopping</button>
            </div>
          </div>
          
          <div class="bill-details" style="display: none;">
            <!-- Bill details will be dynamically inserted here -->
          </div>
          <button class="checkout-btn" id="checkoutBtn">Proceed to Checkout</button>
        </div>
      </div>

      <!-- Payment Page (hidden by default) -->
      <div id="payment-page" class="hidden">
        <button class="back-button" onclick="showCart()">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M15 18L9 12L15 6" stroke="#2e7d32" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
          <span>Payment & Order Summary</span>
        </button>

        <div class="payment-options">
          <div class="option">
            <img src="https://cdn-icons-png.flaticon.com/512/2331/2331941.png" class="logo">
            <div><div class="option-title">Cash on Delivery</div><div class="option-desc">Pay with cash</div></div>
          </div>
          <div class="option">
            <img src="https://upload.wikimedia.org/wikipedia/commons/e/e1/UPI-Logo-vector.svg" class="logo">
            <div><div class="option-title">UPI</div><div class="option-desc">Pay instantly using UPI apps</div></div>
          </div>
          <div class="option">
            <img src="https://upload.wikimedia.org/wikipedia/commons/0/04/Visa.svg" class="logo">
            <img src="https://upload.wikimedia.org/wikipedia/commons/0/0e/Mastercard-logo.png" class="logo" style="width:50px;">
            <div><div class="option-title">Credit / Debit Card</div><div class="option-desc">Pay with card</div></div>
          </div>
        </div>

        <!-- Address Summary (initially hidden) -->
        <div class="address-summary" id="paymentAddressSummary">
          <h3>Delivery Address</h3>
          <div class="address-details" id="paymentAddressDetails"></div>
          <button class="edit-address" id="paymentEditAddress">Edit Address</button>
        </div>

        <div class="footer">
          <div class="price">₹</div>
          <button class="place-order-btn" id="paymentPlaceOrderBtn" disabled>Place Order</button>
        </div>

        <!-- Address Popup -->
        <div class="popup-overlay" id="paymentLocationPopup">
          <div class="popup-box">
            <div class="close-popup" id="paymentClosePopup"></div>
            <div class="popup-header">Enter Delivery Address</div>
            <div class="location-message" id="paymentLocationMessage">
              <span class="location-logo" aria-hidden="true">
                <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true">
                  <path class="location-icon-fg" d="M12 3.2a8.8 8.8 0 1 0 0 17.6 8.8 8.8 0 0 0 0-17.6z"/>
                  <rect class="location-icon-fg" x="11.2" y="0.6" width="1.6" height="3.2" rx="0.8"/>
                  <rect class="location-icon-fg" x="11.2" y="20.2" width="1.6" height="3.2" rx="0.8"/>
                  <rect class="location-icon-fg" x="0.6" y="11.2" width="3.2" height="1.6" rx="0.8"/>
                  <rect class="location-icon-fg" x="20.2" y="11.2" width="3.2" height="1.6" rx="0.8"/>
                  <circle class="location-icon-hole" cx="12" cy="12" r="4.2"/>
                </svg>
              </span>
              Detecting your location...
            </div>
            <div class="map-error" id="paymentMapError">Unable to load map. Please check your address manually.</div>
            <input type="text" id="paymentName" class="input-field" placeholder="Full Name">
            <input type="text" id="paymentMobile" class="input-field" placeholder="Mobile Number">
            <input type="text" id="paymentHouse" class="input-field" placeholder="House / Flat No">
            <input type="text" id="paymentStreet" class="input-field" placeholder="Street / Locality">
            <div class="pincode-container">
              <input type="text" id="paymentPincode" class="input-field" placeholder="Pincode" maxlength="6">
              <div class="suggestions" id="paymentSuggestions"></div>
            </div>
            <div class="use-location" id="paymentUseLocation">
              <span class="location-logo" aria-hidden="true">
                <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true">
                  <path class="location-icon-fg" d="M12 3.2a8.8 8.8 0 1 0 0 17.6 8.8 8.8 0 0 0 0-17.6z"/>
                  <rect class="location-icon-fg" x="11.2" y="0.6" width="1.6" height="3.2" rx="0.8"/>
                  <rect class="location-icon-fg" x="11.2" y="20.2" width="1.6" height="3.2" rx="0.8"/>
                  <rect class="location-icon-fg" x="0.6" y="11.2" width="3.2" height="1.6" rx="0.8"/>
                  <rect class="location-icon-fg" x="20.2" y="11.2" width="3.2" height="1.6" rx="0.8"/>
                  <circle class="location-icon-hole" cx="12" cy="12" r="4.2"/>
                </svg>
              </span>
              Use my current location
            </div>
            <div id="paymentMap"></div>
            <div class="loading" id="paymentLocationLoading"></div>
            <button class="confirm-btn" id="paymentConfirmAddress" disabled>Confirm Address</button>
          </div>
        </div>

        <!-- Toast -->
        <div class="toast" id="paymentToast">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#28a745" viewBox="0 0 24 24">
            <path d="M20.285 6.709l-11.285 11.291-5.285-5.291 1.414-1.414 3.871 3.877 9.871-9.877z"/>
          </svg>
          <span id="paymentToastMessage">Address Saved</span>
        </div>

        <!-- Success -->
        <div class="success-page" id="paymentSuccessPage">
          <div class="circle"><svg viewBox="0 0 52 52"><path d="M14 27l7 7 17-17"></path></svg></div>
          <div class="success-text" id="paymentSuccessText"></div>
          <audio id="paymentSuccessSound" src="https://www.soundjay.com/buttons/sounds/button-3.mp3"></audio>
        </div>

      </div>

      <!-- Orders Page (hidden by default) -->
      <div id="orders-page" class="hidden">
        <div class="orders-container">
          <button class="back-button" onclick="showCategories()">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15 18L9 12L15 6" stroke="#2e7d32" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <span>Back to Home</span>
          </button>
          
          <div class="orders-header">
            <h2>My Orders</h2>
            <div class="orders-count" id="orders-count">0</div>
          </div>
          
          <div class="orders-list" id="orders-list">
            <!-- Orders will be dynamically inserted here -->
            <div class="empty-state">
              <svg width="48" height="48" viewBox="0 0 24 24" fill="#666">
                <path d="M8 1h8v2H8zM6 5h12v2H6zM4 9h16v2H4zM2 13h20v2H2zM0 17h24v2H0z"/>
              </svg>
              <p>You have no orders yet</p>
              <button onclick="showCategories()" class="continue-shopping-btn">Continue Shopping</button>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- ================== 52. BRIXO MART FOOTER and about us ================== -->
<footer id="app-footer" style="background: #2e7d32; background: linear-gradient(to bottom, #43a047, #2e7d32); color: #fff; padding: 50px 20px; border-top-left-radius: 30px; border-top-right-radius: 30px; font-family: 'Arial', sans-serif;">

  <!-- 53. Brand Section -->
  <div style="text-align: center;">
    <h2 style="color: #caffca; margin-bottom: 15px; font-size: 28px; font-weight: bold;">Brixo Mart</h2>
    <p style="color: #f0fff0; font-size: 15px; line-height: 1.8; max-width: 650px; margin: auto;">
      Your trusted grocery grocery partner delivering fresh fruits, vegetables, and daily essentials with quality and convenience right to your doorstep.
    </p>
  </div>

  <!-- 54. App Badge Section -->
  <div style="text-align: center; margin-top: 25px;">
    <a href="#">
      <img src="https://upload.wikimedia.org/wikipedia/commons/7/78/Google_Play_Store_badge_EN.svg" alt="Get it on Google Play" style="width: 160px; transition: transform 0.3s;" onmouseover="this.style.transform='scale(1.05)'" onmouseout="this.style.transform='scale(1)'">
    </a>
  </div>

  <!-- 55. Contact and Support Section -->
  <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-top: 50px; flex-wrap: wrap;">

    <!-- 56. Contact Us LEFT -->
    <div style="text-align: left;">
      <h3 style="margin-bottom: 12px; font-size: 18px; font-weight: 600;">Contact Us</h3>
      <p style="margin: 6px 0; font-size: 14px;">📍 Main Bazaar, Delhi, India</p>
      <p style="margin: 6px 0; font-size: 14px;">✉️ support@brixomart.com</p>
      <p style="margin: 6px 0; font-size: 14px;">📞 +91 8407031843</p>
    </div>

    <!-- 57. Support RIGHT -->
    <div style="text-align: right;">
      <h3 style="margin-bottom: 12px; font-size: 18px; font-weight: 600;">Support</h3>
      <p style="margin: 6px 0; font-size: 14px;">
        <a href="#" onclick="openModal('privacy')" style="color: #d0ffd6; text-decoration: none;" onmouseover="this.style.color='#ffffff'" onmouseout="this.style.color='#d0ffd6'">Privacy Policy</a>
      </p>
      <p style="margin: 6px 0; font-size: 14px;">
        <a href="#" onclick="openModal('terms')" style="color: #d0ffd6; text-decoration: none;" onmouseover="this.style.color='#ffffff'" onmouseout="this.style.color='#d0ffd6'">Terms & Conditions</a>
      </p>
      <p style="margin: 6px 0; font-size: 14px;">
        <a href="#" onclick="openModal('refund')" style="color: #d0ffd6; text-decoration: none;" onmouseover="this.style.color='#ffffff'" onmouseout="this.style.color='#d0ffd6'">Refund Policy</a>
      </p>
    </div>

  </div>

  <!-- 58. Copyright Section -->
  <div style="margin-top: 45px; font-size: 13px; color: #d9f9dc; text-align: center;">
    © 2025 Brixo Mart | All Rights Reserved
  </div>
</footer>
<!-- ================== 59. END FOOTER ================== -->

<!-- ================== 60. MODALS ================== -->
<div id="policyModal" style="display:none; position: fixed; top:0; left:0; width:100%; height:100%; background: rgba(0,0,0,0.7); justify-content:center; align-items:center; z-index:999;">
  <div style="background:#fff; color:#333; padding:25px; border-radius:12px; max-width:600px; width:90%; text-align:left; position:relative;">
    <span onclick="closeModal()" style="position:absolute; top:10px; right:15px; cursor:pointer; font-size:20px; font-weight:bold; color:#2e7d32;">✖</span>
    <h2 id="modalTitle" style="margin-bottom:10px; color:#2e7d32;"></h2>
    <p id="modalContent" style="line-height:1.6; font-size:14px;"></p>
  </div>
</div>

  </div>
  <!-- 62. External JavaScript libraries -->
  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  
  <!-- Inline JavaScript -->
  <script>
    // 1. Menu Toggle Functionality
    const menuToggle = document.getElementById('menuToggle');
    const menu = document.getElementById('menu');
    const overlay = document.getElementById('overlay');

    if (menuToggle && menu && overlay) {
        // 1.1 Add click event to toggle menu
        menuToggle.addEventListener('click', () => {
            menu.classList.toggle('active');
            overlay.classList.toggle('active');
        });

        // 1.2 Add click event to close menu when overlay is clicked
        overlay.addEventListener('click', () => {
            menu.classList.remove('active');
            overlay.classList.remove('active');
        });
    }

    // 2. Location Selector Functionality
    const addressBar = document.getElementById("addressBar");
    const locationPopup = document.getElementById("locationPopup");
    const useCurrentLocation = document.getElementById("useCurrentLocation");
    const currentAddress = document.getElementById("currentAddress");
    const addressIcon = document.getElementById("addressIcon");
    const popupSearchInput = document.getElementById("popupSearchInput");
    const confirmAddressBtn = document.getElementById("confirmAddressBtn");
    const suggestionsBox = document.getElementById("suggestions");
    const homeSearchInput = document.querySelector(".home-search input");
    const locationLoading = document.getElementById("locationLoading");
    const locationMessage = document.getElementById("locationMessage");
    const mapError = document.getElementById("mapError");
    const closePopup = document.getElementById("closePopup");

    // 2.1 Initialize variables for location functionality
    let debounceTimer, cache = {}, selectedIndex = -1, currentSuggestions = [];
    let map, marker, coords = null;

    // 2.2 Open location popup when address bar is clicked
    if (addressBar && locationPopup) {
        addressBar.addEventListener("click", () => locationPopup.style.display = "flex");
        
        // 2.3 Close popup when clicking outside the content
        locationPopup.addEventListener("click", e => {
            if (e.target === locationPopup) locationPopup.style.display = "none";
        });
    }

    // Close popup handler
    closePopup.addEventListener("click", () => {
      locationPopup.style.display = "none";
    });

    // 2.4 Function to set home icon in address bar
    function setHomeIcon() {
        if (addressIcon) {
            addressIcon.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="green" viewBox="0 0 24 24"><path d="M12 3l9 8h-3v9h-5v-6H11v6H6v-9H3l9-8z"/></svg>`;
        }
    }

    // 2.5 Autocomplete search in location popup
    if (popupSearchInput && suggestionsBox) {
        popupSearchInput.addEventListener("input", () => {
            const query = popupSearchInput.value.trim();
            clearTimeout(debounceTimer);
            selectedIndex = -1;
            
            // 2.5.1 Clear suggestions if query is too short
            if (query.length < 2) {
                suggestionsBox.innerHTML = "";
                return;
            }
            
            // 2.5.2 Use cached results if available
            if (cache[query]) {
                renderSuggestions(cache[query]);
                return;
            }
            
            // 2.5.3 Fetch location suggestions with debouncing
            debounceTimer = setTimeout(async () => {
                try {
                    const res = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&addressdetails=1&limit=5&countrycodes=in`);
                    const data = await res.json();
                    cache[query] = data;
                    renderSuggestions(data);
                } catch (err) {
                    console.error(err);
                }
            }, 250);
        });
    }

    // 2.6 Function to render location suggestions
    function renderSuggestions(data) {
        if (!suggestionsBox) return;
        
        currentSuggestions = data;
        suggestionsBox.innerHTML = "";
        
        // 2.6.1 Show message if no results found
        if (data.length === 0) {
            suggestionsBox.innerHTML = "No results found";
            return;
        }
        
        // 2.6.2 Create suggestion items
        data.forEach((item, i) => {
            const div = document.createElement("div");
            div.textContent = item.display_name;
            div.onclick = () => selectSuggestion(i);
            suggestionsBox.appendChild(div);
        });
    }

    // 2.7 Function to handle suggestion selection
    function selectSuggestion(index) {
        const place = currentSuggestions[index];
        if (popupSearchInput) popupSearchInput.value = place.display_name;
        if (currentAddress) currentAddress.innerHTML = place.display_name;
        setHomeIcon();
        if (locationPopup) locationPopup.style.display = "none";
    }

    // 2.8 Keyboard navigation for suggestions
    if (popupSearchInput) {
        popupSearchInput.addEventListener("keydown", e => {
            const items = suggestionsBox ? suggestionsBox.querySelectorAll("div") : [];
            if (items.length === 0) return;
            
            // 2.8.1 Navigate down with arrow down
            if (e.key === "ArrowDown") {
                selectedIndex = (selectedIndex + 1) % items.length;
                updateActive(items);
            } 
            // 2.8.2 Navigate up with arrow up
            else if (e.key === "ArrowUp") {
                selectedIndex = (selectedIndex - 1 + items.length) % items.length;
                updateActive(items);
            } 
            // 2.8.3 Select with enter key
            else if (e.key === "Enter" && selectedIndex >= 0) {
                selectSuggestion(selectedIndex);
            }
        });
    }

    // 2.9 Function to update active suggestion item
    function updateActive(items) {
        items.forEach((item, i) => item.classList.toggle("active", i === selectedIndex));
    }

    // 2.10 Use current location functionality
    if (useCurrentLocation && currentAddress) {
        useCurrentLocation.addEventListener("click", () => {
            if (!navigator.geolocation) {
                alert("Geolocation not supported.");
                return;
            }
            
            currentAddress.innerHTML = "Detecting location...";
            locationLoading.style.display = "block";
            useCurrentLocation.style.display = "none";
            locationMessage.style.display = "block";
            mapError.style.display = "none";
            
            navigator.geolocation.getCurrentPosition(async pos => {
                coords = {lat: pos.coords.latitude, lng: pos.coords.longitude};
                try {
                    await showMap(coords);
                    await fetchAddress(coords);
                    locationLoading.style.display = "none";
                    useCurrentLocation.style.display = "flex";
                    locationMessage.style.display = "none";
                } catch (error) {
                    console.error("Map error:", error);
                    locationLoading.style.display = "none";
                    useCurrentLocation.style.display = "flex";
                    locationMessage.style.display = "none";
                    mapError.style.display = "block";
                }
            }, err => {
                // 2.10.4 Handle geolocation errors
                switch (err.code) {
                    case err.PERMISSION_DENIED:
                        currentAddress.innerHTML = "Permission denied.";
                        break;
                   case err.POSITION_UNAVAILABLE:
                        currentAddress.innerHTML = "Location unavailable.";
                        break;
                    case err.TIMEOUT:
                        currentAddress.innerHTML = "Request timed out.";
                        break;
                    default:
                        currentAddress.innerHTML = "Unknown error.";
                        break;
                }
                locationLoading.style.display = "none";
                useCurrentLocation.style.display = "flex";
            });
        });
    }

    // Show map function
    function showMap({lat, lng}) {
      return new Promise((resolve, reject) => {
        try {
          // Initialize map if not already done
          if (!map) {
            map = L.map("map").setView([lat, lng], 15);
            L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
              attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            }).addTo(map);

            // Create a custom icon for the marker
            const customIcon = L.icon({
              iconUrl: 'https://unpkg.com/leaflet/dist/images/marker-icon.png',
              iconSize: [25, 41],
              iconAnchor: [12, 41],
              popupAnchor: [1, -34],
              shadowUrl: 'https://unpkg.com/leaflet/dist/images/marker-shadow.png',
              shadowSize: [41, 41]
            });

            marker = L.marker([lat, lng], {icon: customIcon, draggable: true}).addTo(map);
            
            // Update address when marker is dragged
            marker.on("dragend", function() {
              const position = marker.getLatLng();
              coords = {lat: position.lat, lng: position.lng};
              fetchAddress(coords);
            });
          } else {
            map.setView([lat, lng], 15);
            marker.setLatLng([lat, lng]);
          }
          
          // Make sure the map container is visible
          document.getElementById("map").style.display = "block";
          
          // Small delay to ensure map renders properly
          setTimeout(() => {
            map.invalidateSize();
            resolve();
          }, 100);
        } catch (error) {
          console.error("Error initializing map:", error);
          mapError.style.display = "block";
          reject(error);
        }
      });
    }

    // Fetch address from coordinates
    async function fetchAddress({lat, lng}) {
      try {
        const res = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`);
        
        if (!res.ok) {
          console.error('Geocoding API error:', res.status);
          return;
        }
        
        const data = await res.json();
        
        if (data && data.address) {
          popupSearchInput.value = data.display_name || "";
          currentAddress.innerHTML = data.display_name || "Current location";
          setHomeIcon();
        }
      } catch(err) { 
        console.error('Error with geocoding API:', err);
      }
    }

    // 2.11 Confirm typed address
    if (confirmAddressBtn && popupSearchInput && currentAddress) {
        confirmAddressBtn.addEventListener("click", () => {
            let val = popupSearchInput.value.trim();
            if (!val) {
                alert("Please enter a location.");
                return;
            }
            currentAddress.innerHTML = val;
            setHomeIcon();
            if (locationPopup) locationPopup.style.display = "none";
        });
    }

    // 3. Grocery search placeholder rotation
    const grocerySuggestions = ["Milk", "Bread", "Rice", "Eggs", "Butter", "Cheese", "Fruits", "Vegetables", "fashion", "beauty", "shampoo", "laptop", "biscuite", "chocleate"];
    let groceryIndex = 0;

    // 3.1 Rotate placeholder text every 2 seconds
    if (homeSearchInput) {
        setInterval(() => {
            homeSearchInput.setAttribute("placeholder", "Search for " + grocerySuggestions[groceryIndex]);
            groceryIndex = (groceryIndex + 1) % grocerySuggestions.length;
        }, 2000);
    }

    // 4. Initialize Swiper for image carousel
    let swiper = null;
    if (document.querySelector('.swiper')) {
        swiper = new Swiper('.swiper', {
            loop: true,
            autoplay: {
                delay: 2500,
                disableOnInteraction: false,
            },
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
        });
    }

    // 5. Addclick event to categories
    document.querySelectorAll('.category').forEach(item => {
        item.addEventListener('click', function () {
            // 5.1 Remove active class from all categories
            document.querySelectorAll('.category').forEach(cat => {
                cat.classList.remove('active');
            });
            // 5.2 Add active class to clicked category
            this.classList.add('active');
        });
    });

    // 6. Sample product data for each category with images
    const productsData = {
        'Apples': [
            {
                name: 'Shimla Apple',
                price: '₹120/kg',
                originalPrice: '₹133/kg',
                discount: '10% OFF',
                description: 'Fresh and juicy Shimla apples with crisp texture and sweet-tart flavor. Rich in fiber and antioxidants.',
                image: 'https://via.placeholder.com/300x300?text=Shimla+Apple'
            },
            {
                name: 'Washington Apple',
                price: '₹180/kg',
                originalPrice: '₹200/kg',
                discount: '10% OFF',
                description: 'Premium imported Washington apples with firm texture and sweet flavor. Perfect for snacking.',
                image: 'https://via.placeholder.com/300x300?text=Washington+Apple'
            },
            {
                name: 'Kashmiri Apple',
                price: '₹150/kg',
                originalPrice: '₹165/kg',
                discount: '9% OFF',
                description: 'Sweet and aromatic Kashmiri apples with deep red color and crisp crisp.',
                image: 'https://via.placeholder.com/300x300?text=Kashmiri+Apple'
            }
        ],
        'Bananas': [
            {
                name: 'Robusta Banana',
                price: '₹50/dozen',
                originalPrice: '₹55/dozen',
                discount: '9% OFF',
                description: 'Fresh Robusta bananas with perfect ripeness. Rich in potassium and natural sugars for energy.',
                image: 'https://via.placeholder.com/300x300?text=Robusta+Banana'
            },
            {
                name: 'Yelakki Banana',
                price: '₹60/dozen',
                originalPrice: '₹65/dozen',
                discount: '8% OFF',
                description: 'Small and sweet Yelakki bananas, perfect for kids and healthy snacks.',
                image: 'https://via.placeholder.com/300x300?text=Yelakki+Banana'
            }
        ],
        'Rice': [
            {
                name: 'India Gate Basmati Rice',
                price: '₹499',
                originalPrice: '₹550',
                discount: '9% OFF',
                description: 'Premium quality basmati rice with long grains and aromatic flavor. Perfect for biryanis and pulao.',
                image: 'https://via.placeholder.com/300x300?text=India+Gate+Rice'
            },
            {
                name: 'Daawat Basmati Rice',
                price: '₹450',
                originalPrice: '₹500',
                discount: '10% OFF',
                description: 'Authentic basmati rice with extra long grains and aromatic. Ideal for daily cooking.',
                image: 'https://via.placeholder.com/300x300?text=Daawat+Rice'
            },
            {
                name: 'Fortune Basmati Rice',
                price: '₹420',
                originalPrice: '₹480',
                discount: '12% OFF',
                description: 'Pure basmati rice with excellent elongation and non-sticky texture. Good for all rice dishes.',
                image: 'https://via.placeholder.com/300x300?text=Fortune+Rice'
            }
        ],
        'Oil': [
            {
                name: 'Fortune Sunflower Oil',
                price: '₹199',
                originalPrice: '₹225',
                discount: '12% OFF',
                description: '100% pure sunflower oil with light taste and high smoke point. Rich in vitamin E.',
                image: 'https://via.placeholder.com/300x300?text=Fortune+Oil'
            },
            {
                name: 'Saffola Gold Oil',
                price: '₹210',
                originalPrice: '₹240',
                discount: '12% OFF',
                description: 'Blended edible oil with extra of rice bran oil and sunflower oil. Helps maintain cholesterol.',
                image: 'https://via.placeholder.com/300x300?text=Saffola+Oil'
            },
            {
                name: 'Patanjali Mustard Oil',
                price: '₹180',
                originalPrice: '₹200',
                discount: '10% OFF',
                description: 'Pure mustard oil with strong aroma and taste. Traditionally used in Indian cooking.',
                image: 'https://via.placeholder.com/300x300?text=Patanjali+Oil'
            }
        ],
        'Wheat': [
            {
                name: 'Aashirvaad Whole Wheat Atta',
                price: '₹299',
                originalPrice: '₹330',
                discount: '9% OFF',
                description: '100% whole wheat atta with 0% maida. Rich in fiber and nutrients for healthy rotis.',
                image: 'https://via.placeholder.com/300x300?text=Aashirvaad+Atta'
            },
            {
                name: 'Pillsbury Chakki Fresh Atta',
                price: '₹280',
                originalPrice: '₹310',
                discount: '10% OFF',
                description: 'Chakki ground whole wheat flour for soft and fluffy rotis. No preservatives added.',
                image: 'https://via.placeholder.com/300x300?text=Pillsbury+Atta'
            },
            {
                name: 'Nature\'s Gift Organic Wheat',
                price: '₹350',
                originalPrice: '₹380',
                discount: '8% OFF',
                description: 'Certified organic whole wheat flour. Grown without chemical fertilizers or pesticides.',
                image: 'https://via.placeholder.com/300x300?text=Organic+Wheat'
            }
        ],
        'Salt': [
            {
                name: 'Tata Iodized Salt',
                price: '₹25',
                originalPrice: '₹28',
                discount: '11% OFF',
                description: 'Pure and vacuum evaporated iodized salt. Essential for thyroid function and overall health.',
                image: 'https://via.placeholder.com/300x300?text=Tata+Salt'
            },
            {
                name: 'Saffola Salt',
                price: '₹30',
                originalPrice: '₹35',
                discount: '14% OFF',
                description: 'Low sodium salt with 15% less sodium than regular salt. Helps maintain blood pressure.',
                image: 'https://via.placeholder.com/300x300?text=Saffola+Salt'
            }
        ],
        'Noodles': [
            {
                name: 'Maggi Masala Noodles',
                price: '₹60',
                originalPrice: '₹70',
                discount: '14% OFF',
                description: 'Instant noodles with masala tastemaker. Ready in just 2 minutes. Contains no added MSG.',
                image: 'https://via.placeholder.com/300x300?text=Maggi+Noodles'
            },
            {
                name: 'Top Ramen Noodles',
                price: '₹55',
                originalPrice: '₹65',
                discount: '15% OFF',
                description: 'Delicious instant noodles with vegetable tastemaker. Quick and easy to prepare.',
                image: 'https://via.placeholder.com/300x300?text=Top+Ramen'
            }
        ],
        'Milk': [
            {
                name: 'Amul Taaza Milk',
                price: '₹60',
                originalPrice: '',
                discount: '',
                description: 'Pasteurized standardized toned milk. Rich in calcium and protein. 4.5% fat content.',
                image: 'https://via.placeholder.com/300x300?text=Amul+Milk'
            },
            {
                name: 'Mother Dairy Milk',
                price: '₹58',
                originalPrice: '',
                discount: '',
                description: 'Pure and fresh toned milk. Homogenized and pasteurized for safety and longer shelf life.',
                image: 'https://via.placeholder.com/300x300?text=Mother+Dairy'
            }
        ],
        'Tea': [
            {
                name: 'Brooke Bond Red Label Tea',
                price: '₹220',
                originalPrice: '₹250',
                discount: '12% OFF',
                description: 'Strong and refreshing tea leaves with rich aroma. Perfect for morning tea.',
                image: 'https://via.placeholder.com/300x300?text=Red+Label+Tea'
            },
            {
                name: 'Taj Mahal Tea',
                price: '₹250',
                originalPrice: '₹280',
                discount: '11% OFF',
                description: 'Premium quality tea leaves with exquisite flavor and aroma. The champagne of teas.',
                image: 'https://via.placeholder.com/300x300?text=Taj+Mahal+Tea'
            }
        ],
        'Sugar': [
            {
                name: 'Dhampur Sugar',
                price: '₹45',
                originalPrice: '₹50',
                discount: '10% OFF',
                description: 'Pure and natural sugar crystals. Free from any additives or artificial colors.',
                image: 'https://via.placeholder.com/300x300?text=Dhampur+Sugar'
            },
            {
                name: 'Madhur Sugar',
                price: '₹48',
                originalPrice: '₹55',
                discount: '13% OFF',
                description: 'Fine quality sugar with uniform crystal size. Dissolves quickly in beverages.',
                image: 'https://via.placeholder.com/300x300?text=Madhur+Sugar'
            }
        ],
        'Biscuits': [
            {
                name: 'Parle-G Biscuits',
                price: '₹10',
                originalPrice: '₹12',
                discount: '17% OFF',
                description: 'Iconic glucose biscuits with great taste. Perfect for tea time or as a quick snack.',
                image: 'https://via.placeholder.com/300x300?text=Parle-G'
            },
            {
                name: 'Britannia Good Day',
                price: '₹20',
                originalPrice: '₹25',
                discount: '20% OFF',
                description: 'Butter cookies with cashew bits. Rich and crunchy taste that melts in your mouth.',
                image: 'https://via.placeholder.com/300x300?text=Good+Day'
            }
        ],
        // Additional categories for the grid view
        'Fresh Fruits': [
            {
                name: 'Apple',
                price: '₹120/kg',
                originalPrice: '₹133/kg',
                discount: '10% OFF',
                description: 'Fresh and juicy apples with crisp texture and sweet-tart flavor.',
                image: 'https://via.placeholder.com/300x300?text=Apple'
            },
            {
                name: 'Banana',
                price: '₹50/dozen',
                originalPrice: '₹55/dozen',
                discount: '9% OFF',
                description: 'Fresh bananas with perfect ripeness. Rich in potassium.',
                image: 'https://via.placeholder.com/300x300?text=Banana'
            }
        ],
        'Fresh Vegetables': [
            {
                name: 'Tomato',
                price: '₹40/kg',
                originalPrice: '₹45/kg',
                discount: '11% OFF',
                description: 'Fresh and juicy tomatoes perfect for salads and cooking.',
                image: 'https://via.placeholder.com/300x300?text=Tomato'
            },
            {
                name: 'Potato',
                price: '₹30/kg',
                originalPrice: '₹35/kg',
                discount: '14% OFF',
                description: 'Fresh potatoes ideal for all types of cooking.',
                image: 'https://via.placeholder.com/300x300?text=Potato'
            }
        ],
        'Organic Produce': [
            {
                name: 'Organic Apple',
                price: '₹180/kg',
                originalPrice: '₹200/kg',
                discount: '10% OFF',
                description: 'Certified organic apples grown without pesticides.',
                image: 'https://via.placeholder.com/300x300?text=Organic+Apple'
            },
            {
                name: 'Organic Tomato',
                price: '₹60/kg',
                originalPrice: '₹70/kg',
                discount: '14% OFF',
                description: 'Certified organic tomatoes with natural flavor.',
                image: 'https://via.placeholder.com/300x300?text=Organic+Tomato'
            }
        ],
        'Exotic Fruits': [
            {
                name: 'Kiwi',
                price: '₹100/pack',
                originalPrice: '₹120/pack',
                discount: '17% OFF',
                description: 'Exotic kiwi fruits packed with vitamin C.',
                image: 'https://via.placeholder.com/300x300?text=Kiwi'
            },
            {
                name: 'Dragon Fruit',
                price: '₹150/piece',
                originalPrice: '₹180/piece',
                discount: '17% OFF',
                description: 'Exotic dragon fruit with unique appearance and taste.',
                image: 'https://via.placeholder.com/300x300?text=Dragon+Fruit'
            }
        ],
        'Mobiles': [
            {
                name: 'iPhone 13',
                price: '₹69,999',
                originalPrice: '₹79,900',
                discount: '12% OFF',
                description: 'Latest iPhone with A15 Bionic chip and great camera.',
                image: 'https://via.placeholder.com/300x300?text=iPhone+13'
            },
            {
                name: 'Samsung Galaxy S21',
                price: '₹59,999',
                originalPrice: '₹69,999',
                discount: '14% OFF',
                description: 'Powerful Android phone with amazing display.',
                image: 'https://via.placeholder.com/300x300?text=Galaxy+S21'
            }
        ],
        'Headphones': [
            {
                name: 'Sony WH-1000XM4',
                price: '₹24,990',
                originalPrice: '₹29,990',
                discount: '17% OFF',
                description: 'Industry-leading noise cancellation headphones.',
                image: 'https://via.placeholder.com/300x300?text=Sony+Headphones'
            },
            {
                name: 'Boat Rockerz 450',
                price: '₹1,499',
                originalPrice: '₹1,999',
                discount: '25% OFF',
                description: 'Comfortable wireless headphones with good sound.',
                image: 'https://via.placeholder.com/300x300?text=Boat+Headphones'
            }
        ]
    };

    // 7. Global variables for app state
    let currentCategory = '';
    let currentProduct = null;
    let wishlistItems = [];
    let cartItems = [];
    let orders = [];
    let totalAmount = 0;

    // 8. Function to show products for a specific category
    function showProducts(category) {
        currentCategory = category;
        document.body.classList.add('products-page-open');
        document.getElementById('categories-page').classList.add('hidden');
        document.getElementById('categories-grid-page').classList.add('hidden');
        document.getElementById('product-detail-page').classList.add('hidden');
        document.getElementById('wishlist-page').classList.add('hidden');
        document.getElementById('cart-page').classList.add('hidden');
        document.getElementById('orders-page').classList.add('hidden');
        document.getElementById('payment-page').classList.add('hidden');
        document.getElementById('products-page').classList.remove('hidden');

        document.getElementById('app-footer').style.display = 'none';

        // 8.1 Set the category title
        document.getElementById('product-category-title').textContent = category;

        // 8.2 Get the product grid container
        const productGrid = document.getElementById('products-grid');
        productGrid.innerHTML = '';

        // 8.3 Check if we have products for this category
        if (productsData[category]) {
            // 8.4 Add products to the grid
            productsData[category].forEach((product, index) => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.onclick = () => showProductDetail(category, index);

                // 8.4.1 Check if product is in wishlist
                const isInWishlist = wishlistItems.some(item => item.name === product.name);

                // 8.4.2 Check if product is in cart
                const cartItem = cartItems.find(item => item.name === product.name);
                const quantity = cartItem ? cartItem.quantity : 0;

                // 8.4.3 Create product card HTML
                productCard.innerHTML = `
                    <button class="wishlist ${isInWishlist ? 'active' : ''}" onclick="toggleWishlist(event, this, '${category}', ${index})" aria-pressed="${isInWishlist}" title="Add to wishlist">
                        <svg viewBox="0 0 24 24" aria-hidden="true" focusable="false">
                            <path d="M12.001 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5
                                     2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09
                                     C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5
                                     c0 3.78-3.4 6.86-8.55 11.54L12.001 21.35z"/>
                        </svg>
                    </button>
                    <div class="product-image-container">
                        <img src="${product.image}" class="product-image" alt="${product.name}">
                    </div>
                    <div class="product-info">
                        <div class="product-title">${product.name}</div>
                        <div class="product-price">${product.price}</div>
                        <div class="bottom-row">
                            <span class="discount-text">${product.discount}</span>
                            ${quantity > 0 ?
                    `<div class="qty-control">
                                <button onclick="decreaseQty(event, this, '${product.name}')">-</button>
                                <span>${quantity}</span>
                                <button onclick="increaseQty(event, this, '${product.name}')">+</button>
                              </div>` :
                    `<div class="add-btn" onclick="addToCart(event, this, '${product.name}')">ADD</div>`}
                        </div>
                    </div>
                `;

                productGrid.appendChild(productCard);
            });
        } else {
            // 8.5 If no products found for this category
            const emptyState = document.createElement('div');
            emptyState.className = 'empty-state';
            emptyState.textContent = 'No products found for this category.';
            productGrid.appendChild(emptyState);
        }
        updateCartCount(); // Update visibility
    }

    // 9. Function to show product detail page
    function showProductDetail(category, productIndex) {
        currentProduct = productsData[category][productIndex];
        document.getElementById('categories-page').classList.add('hidden');
        document.getElementById('categories-grid-page').classList.add('hidden');
        document.getElementById('products-page').classList.add('hidden');
        document.getElementById('wishlist-page').classList.add('hidden');
        document.getElementById('cart-page').classList.add('hidden');
        document.getElementById('orders-page').classList.add('hidden');
        document.getElementById('payment-page').classList.add('hidden');
        document.getElementById('product-detail-page').classList.remove('hidden');
        document.getElementById('header-section').style.display = 'none';

        document.getElementById('app-footer').style.display = 'none';

        // 9.1 Set product details
        document.getElementById('detail-product-image').src = currentProduct.image;
        document.getElementById('detail-product-image').alt = currentProduct.name;
        document.getElementById('detail-product-title').textContent = currentProduct.name;
        document.getElementById('detail-product-price').textContent = currentProduct.price;
        document.getElementById('detail-product-discount').textContent = currentProduct.discount;
        document.getElementById('detail-product-description').textContent = currentProduct.description;
        document.getElementById('detail-qty').textContent = '1';

        // 9.2 Show related products (other products from same category)
        const relatedProductsGrid = document.getElementById('related-products-grid');
        relatedProductsGrid.innerHTML = '';

        if (productsData[category]) {
            productsData[category].forEach((product, index) => {
                if (product.name !== currentProduct.name) { // Don't show current product in related
                    const productCard = document.createElement('div');
                    productCard.className = 'product-card';
                    productCard.onclick = () => {
                        // 9.2.1 Update current product details without reloading page
                        currentProduct = productsData[category][index];
                        document.getElementById('detail-product-image').src = currentProduct.image;
                        document.getElementById('detail-product-image').alt = currentProduct.name;
                        document.getElementById('detail-product-title').textContent = currentProduct.name;
                        document.getElementById('detail-product-price').textContent = currentProduct.price;
                        document.getElementById('detail-product-discount').textContent = currentProduct.discount;
                        document.getElementById('detail-product-description').textContent = currentProduct.description;
                        document.getElementById('detail-qty').textContent = '1';

                        // 9.2.2 Scroll to top of product detail
                        window.scrollTo(0, 0);
                    };

                    // 9.2.3 Check if product is in cart
                    const cartItem = cartItems.find(item => item.name === product.name);
                    const quantity = cartItem ? cartItem.quantity : 0;

                    productCard.innerHTML = `
                        <button class="wishlist" onclick="toggleWishlist(event, this, '${category}', ${index})" aria-pressed="false" title="Add to wishlist">
                            <svg viewBox="0 0 24 24" aria-hidden="true" focusable="false">
                                <path d="M12.001 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5
                                         2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09
                                         C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5
                                         c0 3.78-3.4 6.86-8.55 11.54L12.001 21.35z"/>
                            </svg>
                        </button>
                        <div class="product-image-container">
                            <img src="${product.image}" class="product-image" alt="${product.name}">
                        </div>
                        <div class="product-info">
                            <div class="product-title">${product.name}</div>
                            <div class="product-price">${product.price}</div>
                            <div class="bottom-row">
                                <span class="discount-text">${product.discount}</span>
                                ${quantity > 0 ?
                        `<div class="qty-control">
                                    <button onclick="decreaseQty(event, this, '${product.name}')">-</button>
                                    <span>${quantity}</span>
                                    <button onclick="increaseQty(event, this, '${product.name}')">+</button>
                                  </div>` :
                        `<div class="add-btn" onclick="addToCart(event, this, '${product.name}')">ADD</div>`}
                            </div>
                        </div>
                    `;

                    relatedProductsGrid.appendChild(productCard);
                }
            });
        }
        updateCartCount(); // Update visibility
    }

    // 10. Function to show categories page
    function showCategories() {
        document.body.classList.remove('products-page-open');
        document.getElementById('products-page').classList.add('hidden');
        document.getElementById('categories-grid-page').classList.add('hidden');
        document.getElementById('product-detail-page').classList.add('hidden');
        document.getElementById('wishlist-page').classList.add('hidden');
        document.getElementById('cart-page').classList.add('hidden');
        document.getElementById('orders-page').classList.add('hidden');
        document.getElementById('payment-page').classList.add('hidden');
        document.getElementById('categories-page').classList.remove('hidden');
        document.getElementById('header-section').style.display = 'block';

        document.getElementById('app-footer').style.display = 'block';
        updateCartCount(); // Update visibility
    }

    // 11. Function to show categories grid page
    function showCategoriesGrid() {
        document.body.classList.remove('products-page-open');
        document.getElementById('products-page').classList.add('hidden');
        document.getElementById('categories-page').classList.add('hidden');
        document.getElementById('product-detail-page').classList.add('hidden');
        document.getElementById('wishlist-page').classList.add('hidden');
        document.getElementById('cart-page').classList.add('hidden');
        document.getElementById('orders-page').classList.add('hidden');
        document.getElementById('payment-page').classList.add('hidden');
        document.getElementById('categories-grid-page').classList.remove('hidden');
        document.getElementById('header-section').style.display = 'block';

        document.getElementById('app-footer').style.display = 'none';

        // 11.1 Close menu if open
        if (menu && overlay) {
            menu.classList.remove('active');
            overlay.classList.remove('active');
        }
        updateCartCount(); // Update visibility
    }

    // 12. Function to show wishlist page
    function showWishlist() {
        document.body.classList.add('products-page-open');
        document.getElementById('categories-page').classList.add('hidden');
        document.getElementById('categories-grid-page').classList.add('hidden');
        document.getElementById('products-page').classList.add('hidden');
        document.getElementById('product-detail-page').classList.add('hidden');
        document.getElementById('cart-page').classList.add('hidden');
        document.getElementById('orders-page').classList.add('hidden');
        document.getElementById('payment-page').classList.add('hidden');
        document.getElementById('wishlist-page').classList.remove('hidden');

        document.getElementById('app-footer').style.display = 'none';

        // 12.1 Close menu if open
        if (menu && overlay) {
            menu.classList.remove('active');
            overlay.classList.remove('active');
        }

        // 12.2 Update wishlist count
        document.getElementById('wishlist-count').textContent = wishlistItems.length;

        // 12.3 Display wishlist items
        const wishlistGrid = document.getElementById('wishlist-grid');
        wishlistGrid.innerHTML = '';

        if (wishlistItems.length === 0) {
            const emptyState = document.createElement('div');
            emptyState.className = 'empty-state';
            emptyState.textContent = 'Your wishlist is empty.';
            wishlistGrid.appendChild(emptyState);
        } else {
            wishlistItems.forEach((product, index) => {
                const productCard = document.createElement('div');
                productCard.className = 'product-card';
                productCard.onclick = () => {
                    // 12.3.1 Find the category of this product
                    let category = '';
                    for (const cat in productsData) {
                        if (productsData[cat].some(p => p.name === product.name)) {
                            category = cat;
                            break;
                        }
                    }

                    // 12.3.2 Find the product index in its category
                    const productIndex = productsData[category].findIndex(p => p.name === product.name);

                    // 12.3.3 Show product detail
                    showProductDetail(category, productIndex);
                };

                // 12.3.4 Check if product is in cart
                const cartItem = cartItems.find(item => item.name === product.name);
                const quantity = cartItem ? cartItem.quantity : 0;

                productCard.innerHTML = `
                    <button class="wishlist active" onclick="toggleWishlist(event, this, '${product.category}', ${product.index})" aria-pressed="true" title="Remove from wishlist">
                        <svg viewBox="0 0 24 24" aria-hidden="true" focusable="false">
                            <path d="M12.001 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5
                                     2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09
                                     C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5
                                     c0 3.78-3.4 6.86-8.55 11.54L12.001 21.35z"/>
                        </svg>
                    </button>
                    <div class="product-image-container">
                        <img src="${product.image}" class="product-image" alt="${product.name}">
                    </div>
                    <div class="product-info">
                        <div class="product-title">${product.name}</div>
                        <div class="product-price">${product.price}</div>
                        <div class="bottom-row">
                            <span class="discount-text">${product.discount}</span>
                            ${quantity > 0 ?
                    `<div class="qty-control">
                                <button onclick="decreaseQty(event, this, '${product.name}')">-</button>
                                <span>${quantity}</span>
                                <button onclick="increaseQty(event, this, '${product.name}')">+</button>
                              </div>` :
                    `<div class="add-btn" onclick="addToCart(event, this, '${product.name}')">ADD</div>`}
                        </div>
                    </div>
                `;

                wishlistGrid.appendChild(productCard);
            });
        }
        updateCartCount(); // Update visibility
    }

    // 13. Function to show cart page
    function showCart() {
        document.body.classList.add('products-page-open');
        document.getElementById('categories-page').classList.add('hidden');
        document.getElementById('categories-grid-page').classList.add('hidden');
        document.getElementById('products-page').classList.add('hidden');
        document.getElementById('product-detail-page').classList.add('hidden');
        document.getElementById('wishlist-page').classList.add('hidden');
        document.getElementById('orders-page').classList.add('hidden');
        document.getElementById('payment-page').classList.add('hidden');
        document.getElementById('cart-page').classList.remove('hidden');

        document.getElementById('app-footer').style.display = 'none';

        // 13.1 Close menu if open
        if (menu && overlay) {
            menu.classList.remove('active');
            overlay.classList.remove('active');
        }

        // 13.2 Update cart count
        updateCartCount();

        // 13.3 Display cart items
        const cartContainer = document.getElementById('cart-items');
        cartContainer.innerHTML = '';

        if (cartItems.length === 0) {
            cartContainer.innerHTML = `
                <div class="empty-state">
                    <p>Your cart is empty</p>
                    <button onclick="showCategories()" class="continue-shopping-btn">Continue Shopping</button>
                </div>
            `;
            document.querySelector('.bill-details').style.display = 'none';
            document.querySelector('.checkout-btn').style.display = 'none';
        } else {
            document.querySelector('.bill-details').style.display = 'block';
            document.querySelector('.checkout-btn').style.display = 'block';

            cartItems.forEach((item, index) => {
                const cartItem = document.createElement('div');
                cartItem.className = 'cart-item';
                cartItem.dataset.index = index;

                // 13.3.1 Calculate price for this item
                const price = parseInt(item.price.replace(/[^0-9]/g, ''));
                const totalPrice = price * item.quantity;
                const originalPrice = item.originalPrice ? parseInt(item.originalPrice.replace(/[^0-9]/g, '')) * item.quantity : 0;

                cartItem.innerHTML = `
                    <div class="cart-item-image">
                        <img src="${item.image}" alt="${item.name}">
                    </div>
                    <div class="cart-item-details">
                        <div class="cart-item-title">${item.name}</div>
                        <div class="cart-item-size">${item.size || '1 unit'}</div>
                        <div class="cart-item-price">
                            ₹${totalPrice}
                            ${item.originalPrice ? `<span class="cart-item-original-price">₹${originalPrice}</span>` : ''}
                        </div>
                        <div class="cart-item-actions">
                            <button class="remove-item" onclick="removeFromCart(event, ${index})">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="#f44336">
                                    <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
                                </svg>
                                Remove
                            </button>
                            <div class="qty-control">
                                <button onclick="decreaseCartQty(event, this)">-</button>
                                <span>${item.quantity}</span>
                                <button onclick="increaseCartQty(event, this)">+</button>
                            </div>
                        </div>
                    </div>
                `;

                cartContainer.appendChild(cartItem);
            });

            updateCartTotal();
        }
        updateCartCount(); // Update visibility
    }

    // 14. Function to show payment page
    function showPayment() {
        document.body.classList.add('products-page-open');
        document.getElementById('categories-page').classList.add('hidden');
        document.getElementById('categories-grid-page').classList.add('hidden');
        document.getElementById('products-page').classList.add('hidden');
        document.getElementById('product-detail-page').classList.add('hidden');
        document.getElementById('wishlist-page').classList.add('hidden');
        document.getElementById('cart-page').classList.add('hidden');
        document.getElementById('orders-page').classList.add('hidden');
        document.getElementById('payment-page').classList.remove('hidden');

        document.getElementById('app-footer').style.display = 'none';

        document.querySelector('#payment-page .price').textContent = '₹' + totalAmount;
        updateCartCount(); // Update visibility
    }

    // 17. Add to Cart Function
    function addToCart(event, button, productName = null) {
        if (event) event.stopPropagation();

        // 17.1 Get product details
        let product;
        if (productName) {
            // 17.1.1 Find product by name
            for (const category in productsData) {
                const found = productsData[category].find(p => p.name === productName);
                if (found) {
                    product = found;
                    break;
                }
            }
        } else if (currentProduct) {
            product = currentProduct;
        } else {
            return;
        }

        if (!product) return;

        // 17.2 Check if already in cart
        const existingItem = cartItems.find(item => item.name === product.name);

        if (existingItem) {
            existingItem.quantity += 1;
        } else {
            cartItems.push({
                ...product,
                quantity: 1,
                size: product.size || '1 unit'
            });
        }

        // 17.3 Update button UI
        if (button) {
            button.outerHTML = `
                <div class="qty-control">
                    <button onclick="decreaseQty(event, this, '${product.name}')">-</button>
                    <span>${existingItem ? existingItem.quantity + 1 : 1}</span>
                    <button onclick="increaseQty(event, this, '${product.name}')">+</button>
                </div>
            `;
        }

        updateCartCount();
        showToast(`${product.name} added to cart`);
    }

    // 18. Quantity Controls
    function increaseQty(event, btn, productName) {
        event.stopPropagation();
        const item = cartItems.find(item => item.name === productName);
        if (item) {
            item.quantity += 1;
            btn.parentElement.querySelector("span").textContent = item.quantity;
            updateCartTotal();
        }
    }

    function decreaseQty(event, btn, productName) {
        event.stopPropagation();
        const itemIndex = cartItems.findIndex(item => item.name === productName);

        if (itemIndex >= 0) {
            if (cartItems[itemIndex].quantity <= 1) {
                // 18.1 Remove from cart
                cartItems.splice(itemIndex, 1);

                // 18.2 Reset all product buttons
                document.querySelectorAll('.product-card').forEach(card => {
                    if (card.querySelector('.product-title')?.textContent === productName) {
                        const qtyControl = card.querySelector('.qty-control');
                        if (qtyControl) {
                            qtyControl.outerHTML = '<div class="add-btn" onclick="addToCart(event, this, \'' + productName + '\')">ADD</div>';
                        }
                    }
                });
            } else {
                cartItems[itemIndex].quantity -= 1;
                btn.parentElement.querySelector("span").textContent = cartItems[itemIndex].quantity;
            }
            updateCartTotal();
        }

        if (document.getElementById('cart-page').classList.contains('hidden')) {
            updateCartCount();
        } else {
            showCart();
        }
    }

    // 19. Cart Page Functions
    function removeFromCart(event, index) {
        event.stopPropagation();
        const removedItem = cartItems[index];
        cartItems.splice(index, 1);

        // 19.1 Update product cards
        document.querySelectorAll('.product-card').forEach(card => {
            if (card.querySelector('.product-title')?.textContent === removedItem.name) {
                const qtyControl = card.querySelector('.qty-control');
                if (qtyControl) {
                    qtyControl.outerHTML = '<div class="add-btn" onclick="addToCart(event, this, \'' + removedItem.name + '\')">ADD</div>';
                }
            }
        });

        showCart();
    }

    function increaseCartQty(event, btn) {
        event.stopPropagation();
        const index = parseInt(btn.closest('.cart-item').dataset.index);
        if (!isNaN(index)) {
            cartItems[index].quantity += 1;
            btn.parentElement.querySelector("span").textContent = cartItems[index].quantity;
            updateCartTotal();
        }
    }

    function decreaseCartQty(event, btn) {
        event.stopPropagation();
        const index = parseInt(btn.closest('.cart-item').dataset.index);
        if (!isNaN(index)) {
            if (cartItems[index].quantity <= 1) {
                removeFromCart(event, index);
            } else {
                cartItems[index].quantity -= 1;
                btn.parentElement.querySelector("span").textContent = cartItems[index].quantity;
                updateCartTotal();
            }
        }
    }

    // 20. Helper Functions
    function updateCartCount() {
        const totalItems = cartItems.reduce((total, item) => total + item.quantity, 0);
        document.getElementById('cart-count').textContent = totalItems;

        // Update new cart bar
        const cartBar = document.getElementById('cart-bar');
        if (cartBar) {
            if (!document.getElementById('cart-page').classList.contains('hidden') || !document.getElementById('payment-page').classList.contains('hidden') || totalItems === 0) {
                cartBar.style.display = 'none';
            } else {
                cartBar.style.display = 'flex';
            }
            const itemsElem = cartBar.querySelector('.items');
            const priceElem = cartBar.querySelector('.price');
            if (itemsElem) itemsElem.textContent = `${totalItems} ${totalItems === 1 ? 'item' : 'items'}`;
            if (priceElem) priceElem.textContent = `₹${totalAmount}`;
        }
    }

    function updateCartTotal() {
        let itemsTotal = 0;
        let totalSaved = 0;

        // 20.1 Calculate total price and savings
        cartItems.forEach(item => {
            const price = parseInt(item.price.replace(/[^0-9]/g, ''));
            itemsTotal += price * item.quantity;

            if (item.originalPrice) {
                const originalPrice = parseInt(item.originalPrice.replace(/[^0-9]/g, ''));
                totalSaved += (originalPrice - price) * item.quantity;
            }
        });

        // 20.2 Define all fees
        const platformFee = 5;  // Platform fee ₹5
        const deliveryFee = 30; // Delivery fee ₹30
        const handlingFee = 10; // Handling fee ₹10
        const additionalFees = platformFee + deliveryFee + handlingFee;
        const grandTotal = itemsTotal + additionalFees;

        totalAmount = grandTotal;

        // 20.3 Update bill details section
        const billDetails = document.querySelector('.bill-details');
        if (billDetails) {
            billDetails.innerHTML = `
            <div class="bill-row">
                <span class="bill-label">Items (${cartItems.reduce((total, item) => total + item.quantity, 0)})</span>
                <span class="bill-value">₹${itemsTotal}</span>
            </div>
            <div class="bill-row">
                <span class="bill-label">Discount</span>
                <span class="bill-value saved">-₹${totalSaved}</span>
            </div>
            <div class="bill-row">
                <span class="bill-label">Platform fee</span>
                <span class="bill-value">₹${platformFee}</span>
            </div>
            <div class="bill-row">
                <span class="bill-label">Delivery fee</span>
                <span class="bill-value">₹${deliveryFee}</span>
            </div>
            <div class="bill-row">
                <span class="bill-label">Handling fee</span>
                <span class="bill-value">₹${handlingFee}</span>
            </div>
            <div class="bill-row grand-total">
                <span class="bill-label">Total Amount</span>
                <span class="bill-value">₹${grandTotal}</span>
            </div>
        `;
        }
        updateCartCount();
    }

    // 21. Toast notification function
    function showToast(message) {
        const toast = document.createElement('div');
        toast.className = 'toast-message';
        toast.textContent = message;
        document.body.appendChild(toast);

        setTimeout(() => {
            toast.classList.add('show');
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => {
                    document.body.removeChild(toast);
                }, 300);
            }, 2000);
        }, 10);
    }

    // 22. Product detail quantity controls
    function increaseDetailQty() {
        let qty = document.getElementById('detail-qty');
        qty.textContent = parseInt(qty.textContent) + 1;
    }

    function decreaseDetailQty() {
        let qty = document.getElementById('detail-qty');
        let newQty = parseInt(qty.textContent) - 1;
        if (newQty < 1) newQty = 1;
        qty.textContent = newQty;
    }

    function addDetailToCart() {
        const quantity = parseInt(document.getElementById('detail-qty').textContent);

        for (let i = 0; i < quantity; i++) {
            addToCart(null, null, currentProduct.name);
        }

        // 22.1 Show confirmation
        showToast(`${quantity} ${currentProduct.name} added to cart!`);
    }

    // 23. Wishlist toggle function
    function toggleWishlist(event, el, category, index) {
        event.stopPropagation();
        el.classList.toggle('active');
        const isActive = el.classList.contains('active');
        el.setAttribute('aria-pressed', isActive);

        const product = productsData[category][index];
        const productData = {
            ...product,
            category,
            index
        };

        if (isActive) {
            // 23.1 Add to wishlist
            if (!wishlistItems.some(item => item.name === product.name)) {
                wishlistItems.push(productData);

                // 23.2 Show popup
                showToast("Added to wishlist");
            }
        } else {
            // 23.3 Remove from wishlist
            wishlistItems = wishlistItems.filter(item => item.name !== product.name);

            // 23.4 If we're on the wishlist page, refresh it
            if (!document.getElementById('wishlist-page').classList.contains('hidden')) {
                showWishlist();
            }
        }
    }

    // 24. Search functionality
    const openSearch = document.getElementById("openSearch");
    const closeSearch = document.getElementById("closeSearch");
    const searchOverlay = document.getElementById("searchOverlay");
    const searchInput = document.getElementById("searchInput");

    if (openSearch && closeSearch && searchOverlay && searchInput) {
        openSearch.addEventListener("click", () => {
            searchOverlay.classList.add("active");
            setTimeout(() => searchInput.focus(), 0);
        });

        closeSearch.addEventListener("click", () => {
            searchOverlay.classList.remove("active");
        });
    }

    // 25. Auto-detect location on page load
    document.addEventListener('DOMContentLoaded', function () {
        if (navigator.geolocation && currentAddress) {
            currentAddress.innerHTML = "Detecting location...";
            navigator.geolocation.getCurrentPosition(async pos => {
                const lat = pos.coords.latitude, lon = pos.coords.longitude;
                try {
                    const res = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}`);
                    const data = await res.json();
                    currentAddress.innerHTML = data.display_name || "Current location";
                    setHomeIcon();
                } catch (err) {
                    console.error(err);
                    currentAddress.innerHTML = "Select your delivery location...";
                }
            }, err => {
                console.error(err);
                currentAddress.innerHTML = "Select your delivery location...";
            });
        }
        
        // 25.1 Open location popup on page load
        if (locationPopup) {
            locationPopup.style.display = "flex";
        }

        // 25.2 Attach event to checkout button
        document.getElementById('checkoutBtn').addEventListener('click', showPayment);

        // Call payment init
        paymentInit();

        // Show footer initially
        document.getElementById('app-footer').style.display = 'block';

        // Attach onclick to cart bar
        const cartBar = document.getElementById('cart-bar');
        if (cartBar) {
            cartBar.addEventListener('click', showCart);
        }
    });

    // 26. Modal functions for policies
    function openModal(type) {
        const modal = document.getElementById("policyModal");
        const title = document.getElementById("modalTitle");
        const content = document.getElementById("modalContent");

        if (modal && title && content) {
            if (type === "privacy") {
                title.innerText = "Privacy Policy";
                content.innerText = "This is a demo Privacy Policy. We respect your privacy and ensure your personal data is kept safe and used only for service improvement right to your doorstep.";
            }
            else if (type === "terms") {
                title.innerText = "Terms & Conditions";
                content.innerText = "These are demo Terms & Conditions. By using Brixo Mart services, you agree to follow our guidelines and policies for a better experience.";
            }
            else if (type === "refund") {
                title.innerText = "Refund Policy";
                content.innerText = "This is a demo Refund Policy. Refunds are processed within 5-7 business days subject to eligibility and product condition.";
            }

            modal.style.display = "flex";
        }
    }

    function closeModal() {
        const modal = document.getElementById("policyModal");
        if (modal) modal.style.display = "none";
    }

    // 27. Initialize the app
    function initApp() {
        // 27.1 Add event listeners for navigation
        document.querySelectorAll('.nav-item').forEach(item => {
            item.addEventListener('click', function() {
                const target = this.getAttribute('data-target');
                if (target === 'categories') {
                    showCategories();
                } else if (target === 'categories-grid') {
                    showCategoriesGrid();
                } else if (target === 'wishlist') {
                    showWishlist();
                } else if (target === 'cart') {
                    showCart();
                }
            });
        });

        // 27.2 Add event listeners for category items
        document.querySelectorAll('.category').forEach(category => {
            category.addEventListener('click', function() {
                const categoryName = this.getAttribute('data-category');
                showProducts(categoryName);
            });
        });

        // 27.3 Add event listeners for back buttons
        document.querySelectorAll('.back-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const target = this.getAttribute('data-target');
                if (target === 'categories') {
                    showCategories();
                } else if (target === 'categories-grid') {
                    showCategoriesGrid();
                } else if (target === 'products') {
                    showProducts(currentCategory);
                }
            });
        });

        // 27.4 Initialize cart count
        updateCartCount();
    }

    // 28. Run initialization when DOM is loaded
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initApp);
    } else {
        initApp();
    }

    // 29. Show Orders Function
    function showOrders() {
        document.body.classList.add('products-page-open');
        document.getElementById('categories-page').classList.add('hidden');
        document.getElementById('categories-grid-page').classList.add('hidden');
        document.getElementById('products-page').classList.add('hidden');
        document.getElementById('product-detail-page').classList.add('hidden');
        document.getElementById('wishlist-page').classList.add('hidden');
        document.getElementById('cart-page').classList.add('hidden');
        document.getElementById('payment-page').classList.add('hidden');
        document.getElementById('orders-page').classList.remove('hidden');

        document.getElementById('app-footer').style.display = 'none';

        // Close menu if open
        if (menu && overlay) {
            menu.classList.remove('active');
            overlay.classList.remove('active');
        }

        // Update orders count
        document.getElementById('orders-count').textContent = orders.length;

        // Display orders
        const ordersList = document.getElementById('orders-list');
        ordersList.innerHTML = '';

        if (orders.length === 0) {
            ordersList.innerHTML = `
                <div class="empty-state">
                    <svg width="48" height="48" viewBox="0 0 24 24" fill="#666">
                        <path d="M8 1h8v2H8zM6 5h12v2H6zM4 9h16v2H4zM2 13h20v2H2zM0 17h24v2H0z"/>
                    </svg>
                    <p>You have no orders yet</p>
                    <button onclick="showCategories()" class="continue-shopping-btn">Continue Shopping</button>
                </div>
            `;
        } else {
            orders.forEach(order => {
                const orderDiv = document.createElement('div');
                orderDiv.className = 'order-item';

                let itemsHtml = '';
                order.items.forEach(item => {
                    itemsHtml += `
                        <div class="order-item-detail">
                            <span>${item.name} x ${item.quantity}</span>
                            <span>₹${parseInt(item.price.replace(/[^0-9]/g, '')) * item.quantity}</span>
                        </div>
                    `;
                });

                orderDiv.innerHTML = `
                    <div class="order-header">
                        <span>Order #${order.id}</span>
                        <span>${order.date}</span>
                    </div>
                    ${itemsHtml}
                    <div class="order-total">
                        <span>Total</span>
                        <span>₹${order.total}</span>
                    </div>
                    <div class="order-status">${order.status}</div>
                `;

                ordersList.appendChild(orderDiv);
            });
        }
        updateCartCount(); // Update visibility
    }
// DOM Elements
const paymentOptions = document.querySelectorAll(".option");
const paymentLocationPopup = document.getElementById("paymentLocationPopup");
const paymentConfirmBtn = document.getElementById("paymentConfirmAddress");
const paymentToast = document.getElementById("paymentToast");
const paymentToastMessage = document.getElementById("paymentToastMessage");
const paymentSuccessPage = document.getElementById("paymentSuccessPage");
const paymentSuccessText = document.getElementById("paymentSuccessText");
const paymentSuccessSound = document.getElementById("paymentSuccessSound");
const paymentUseLocation = document.getElementById("paymentUseLocation");
const paymentPincodeInput = document.getElementById("paymentPincode");
const paymentSuggestionsBox = document.getElementById("paymentSuggestions");
const paymentPlaceOrderBtn = document.getElementById("paymentPlaceOrderBtn");
const paymentLocationLoading = document.getElementById("paymentLocationLoading");
const paymentLocationMessage = document.getElementById("paymentLocationMessage");
const paymentMapError = document.getElementById("paymentMapError");
const paymentClosePopup = document.getElementById("paymentClosePopup");
const paymentAddressSummary = document.getElementById("paymentAddressSummary");
const paymentAddressDetails = document.getElementById("paymentAddressDetails");
const paymentEditAddressBtn = document.getElementById("paymentEditAddress");

// State variables
let selectedOption = null, paymentMap, paymentMarker, paymentCoords = null, paymentDebounceTimer, paymentCache = {}, paymentSelectedIndex = -1, paymentCurrentSuggestions = [];
let paymentAddressFieldsFilled = false;
let confirmedAddress = null;

// Initialize the payment system
function paymentInit() {
  // Payment select
  paymentOptions.forEach(opt => {
    opt.addEventListener("click", () => {
      paymentOptions.forEach(o => o.classList.remove("selected"));
      opt.classList.add("selected");
      selectedOption = opt.querySelector(".option-title").textContent;
      paymentPlaceOrderBtn.disabled = false;
    });
  });

  // Close popup handler
  paymentClosePopup.addEventListener("click", () => {
    paymentLocationPopup.style.display = "none";
  });

  // Show address popup when place order is clicked
  paymentPlaceOrderBtn.addEventListener("click", () => {
    if (!selectedOption) {
      paymentShowToast("Please select a payment method first!");
      return;
    }
    
    // If address is already confirmed, proceed to place order
    if (confirmedAddress) {
      placeOrder();
      return;
    }
    
    // Otherwise, show address popup
    paymentLocationPopup.style.display = "flex";
  });

  // Edit address handler
  paymentEditAddressBtn.addEventListener("click", () => {
    paymentLocationPopup.style.display = "flex";
  });

  // Manual location detection
  paymentUseLocation.addEventListener("click", paymentDetectLocation);

  // Pincode autocomplete
  paymentPincodeInput.addEventListener("input", paymentHandlePincodeInput);

  // Keyboard navigation for suggestions
  paymentPincodeInput.addEventListener("keydown", paymentHandlePincodeKeydown);

  // Close suggestions when clicking outside
  document.addEventListener("click", (e) => {
    if (e.target !== paymentPincodeInput && e.target.parentNode !== paymentSuggestionsBox) {
      paymentSuggestionsBox.style.display = "none";
    }
  });

  // Check if all address fields are filled
  document.getElementById("paymentName").addEventListener("input", paymentCheckAddressFields);
  document.getElementById("paymentMobile").addEventListener("input", paymentCheckAddressFields);
  document.getElementById("paymentHouse").addEventListener("input", paymentCheckAddressFields);
  document.getElementById("paymentStreet").addEventListener("input", paymentCheckAddressFields);
  paymentPincodeInput.addEventListener("input", paymentCheckAddressFields);

  // Confirm Address
  paymentConfirmBtn.addEventListener("click", paymentConfirmAddress);
}

// Location detection function
function paymentDetectLocation() {
  if (!navigator.geolocation) {
    paymentShowToast("Geolocation not supported by your browser");
    return;
  }
  
  paymentLocationLoading.style.display = "block";
  paymentUseLocation.style.display = "none";
  paymentLocationMessage.style.display = "block";
  paymentMapError.style.display = "none";
  
  navigator.geolocation.getCurrentPosition(
    async (pos) => {
      paymentCoords = {lat: pos.coords.latitude, lng: pos.coords.longitude};
      try {
        await paymentShowMap(paymentCoords);
        await paymentFetchAddress(paymentCoords);
        paymentLocationLoading.style.display = "none";
        paymentUseLocation.style.display = "flex";
        paymentLocationMessage.style.display = "none";
      } catch (error) {
        console.error("Map error:", error);
        paymentLocationLoading.style.display = "none";
        paymentUseLocation.style.display = "flex";
        paymentLocationMessage.style.display = "none";
        paymentMapError.style.display = "block";
      }
    },
    (error) => {
      paymentLocationMessage.textContent = "Location permission denied or unable to get location";
      console.error("Geolocation error:", error);
      paymentLocationLoading.style.display = "none";
      paymentUseLocation.style.display = "flex";
    },
    {timeout: 10000, enableHighAccuracy: true}
  );
}

// Show map function
function paymentShowMap({lat, lng}) {
  return new Promise((resolve, reject) => {
    try {
      // Initialize map if not already done
      if (!paymentMap) {
        paymentMap = L.map("paymentMap").setView([lat, lng], 15);
        L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
          attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(paymentMap);

        // Create a custom icon for the marker
        const customIcon = L.icon({
          iconUrl: 'https://unpkg.com/leaflet/dist/images/marker-icon.png',
          iconSize: [25, 41],
          iconAnchor: [12, 41],
          popupAnchor: [1, -34],
          shadowUrl: 'https://unpkg.com/leaflet/dist/images/marker-shadow.png',
          shadowSize: [41, 41]
        });

        paymentMarker = L.marker([lat, lng], {icon: customIcon, draggable: true}).addTo(paymentMap);
        
        // Update address when marker is dragged
        paymentMarker.on("dragend", function() {
          const position = paymentMarker.getLatLng();
          paymentCoords = {lat: position.lat, lng: position.lng};
          paymentFetchAddress(paymentCoords);
        });
      } else {
        paymentMap.setView([lat, lng], 15);
        paymentMarker.setLatLng([lat, lng]);
      }
      
      // Make sure the map container is visible
      document.getElementById("paymentMap").style.display = "block";
      
      // Small delay to ensure map renders properly
      setTimeout(() => {
        paymentMap.invalidateSize();
        resolve();
      }, 100);
    } catch (error) {
      console.error("Error initializing map:", error);
      paymentMapError.style.display = "block";
      reject(error);
    }
  });
}

// Fetch address from coordinates
async function paymentFetchAddress({lat, lng}) {
  try {
    const res = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`);
    
    if (!res.ok) {
      console.error('Geocoding API error:', res.status);
      return;
    }
    
    const data = await res.json();
    
    if (data && data.address) {
      document.getElementById("paymentStreet").value = data.address.road || data.address.suburb || '';
      document.getElementById("paymentPincode").value = data.address.postcode || '';
      
      if (data.display_name) {
        const addressParts = data.display_name.split(',');
        if (addressParts.length > 0) {
          document.getElementById("paymentHouse").value = addressParts[0] || '';
        }
      }
    }
  } catch(err) { 
    console.error('Error with geocoding API:', err);
  }
  
  // Check if address fields are filled to enable confirm button
  paymentCheckAddressFields();
}

// Pincode input handler
function paymentHandlePincodeInput() {
  const query = paymentPincodeInput.value.trim.trim();
  clearTimeout(paymentDebounceTimer);
  paymentSelectedIndex = -1;
  
  // Only allow numeric input
  paymentPincodeInput.value = paymentPincodeInput.value.replace(/\D/g, '');
  
  if (query.length !== 6) { 
    paymentSuggestionsBox.style.display = "none";
    paymentSuggestionsBox.innerHTML = ""; 
    return;
  }
  
  if (paymentCache[query]) { 
    paymentRenderSuggestions(paymentCache[query]); 
    return;
  }
  
  paymentDebounceTimer = setTimeout(async () => {
    try {
      const res = await fetch(`https://api.postalpincode.in/pincode/${query}`);
      const data = await res.json();
      
      if (data[0].Status === 'Success' && data[0].PostOffice && data[0].PostOffice.length > 0) {
        paymentCache[query] = data[0].PostOffice;
        paymentRenderSuggestions(data[0].PostOffice);
      } else {
        paymentSuggestionsBox.innerHTML = "<div>No results found</div>";
        paymentSuggestionsBox.style.display = "block";
      }
    } catch(err) { 
      console.error("Pincode API error:", err);
      paymentSuggestionsBox.innerHTML = "<div>Error fetching data</div>";
      paymentSuggestionsBox.style.display = "block";
    }
  }, 300);
}

// Render pincode suggestions
function paymentRenderSuggestions(list) {
  paymentCurrentSuggestions = list;
  paymentSuggestionsBox.innerHTML = "";
  
  if (list.length === 0) {
    paymentSuggestionsBox.innerHTML = "<div>No results found</div>";
    paymentSuggestionsBox.style.display = "block";
    return;
  }
  
  list.forEach((item, i) => {
    const div = document.createElement("div");
    div.textContent = `${item.Name}, ${item.District}, ${item.State}`;
    div.onclick = () => paymentSelectSuggestion(i);
    paymentSuggestionsBox.appendChild(div);
  });
  
  paymentSuggestionsBox.style.display = "block";
}

// Select a suggestion
function paymentSelectSuggestion(index) {
  const place = paymentCurrentSuggestions[index];
  document.getElementById("paymentStreet").value = place.Name;
  document.getElementById("paymentPincode").value = place.Pincode;
  paymentSuggestionsBox.style.display = "none";
  paymentSuggestionsBox.innerHTML = "";
  
  // Check if address fields are filled to enable confirm button
  paymentCheckAddressFields();
}

// Keyboard navigation for pincode suggestions
function paymentHandlePincodeKeydown(e) {
  const items = paymentSuggestionsBox.querySelectorAll("div");
  if (items.length === 0) return;
  
  if (e.key === "ArrowDown") {
    e.preventDefault();
    paymentSelectedIndex = (paymentSelectedIndex + 1) % items.length;
    paymentUpdateActive(items);
  } else if (e.key === "ArrowUp") {
    e.preventDefault();
    paymentSelectedIndex = (paymentSelectedIndex - 1 + items.length) % items.length;
    paymentUpdateActive(items);
  } else if (e.key === "Enter" && paymentSelectedIndex >= 0) {
    e.preventDefault();
    paymentSelectSuggestion(paymentSelectedIndex);
  } else if (e.key === "Escape") {
    paymentSuggestionsBox.style.display = "none";
  }
}

// Update active suggestion
function paymentUpdateActive(items) { 
  items.forEach((item, i) => item.classList.toggle("active", i === paymentSelectedIndex));
  
  // Scroll into view
  if (paymentSelectedIndex >= 0) {
    items[paymentSelectedIndex].scrollIntoView({block: "nearest"});
  }
}

// Check if all address fields are filled
function paymentCheckAddressFields() {
  const name = document.getElementById("paymentName").value;
  const mobile = document.getElementById("paymentMobile").value;
  const house = document.getElementById("paymentHouse").value;
  const street = document.getElementById("paymentStreet").value;
  const pin = document.getElementById("paymentPincode").value;

  paymentAddressFieldsFilled = name && mobile && house && street && pin;
  paymentConfirmBtn.disabled = !paymentAddressFieldsFilled;
}

// Toast function
function paymentShowToast(message) {
  paymentToastMessage.innerText = message;
  paymentToast.classList.add("show");
  setTimeout(() => paymentToast.classList.remove("show"), 2500);
}

// Confirm Address
function paymentConfirmAddress() {
  const name = document.getElementById("paymentName").value;
  const mobile = document.getElementById("paymentMobile").value;
  const house = document.getElementById("paymentHouse").value;
  const street = document.getElementById("paymentStreet").value;
  const pin = document.getElementById("paymentPincode").value;

  if (!name || !mobile || !house || !street || !pin) { 
    paymentShowToast("Please fill all address fields!"); 
    return;
  }

  // Validate mobile number
  if (!/^\d{10}$/.test(mobile)) {
    paymentShowToast("Please enter a valid 10-digit mobile number");
    return;
  }

  // Validate pincode
  if (!/^\d{6}$/.test(pin)) {
    paymentShowToast("Please enter a valid 6-digit pincode");
    return;
  }

  // Save address details
  confirmedAddress = { name, mobile, house, street, pin };
  
  // Update address summary
  paymentAddressDetails.innerHTML = `
    <strong>${name}</strong><br>
    ${house}, ${street}<br>
    Pincode: ${pin}<br>
    Mobile: ${mobile}
  `;
  
  // Show address summary
  paymentAddressSummary.style.display = "block";
  
  paymentLocationPopup.style.display = "none";
  paymentShowToast("Address Saved!");
  
  // Now the user can place the order
  paymentPlaceOrderBtn.disabled = false;
}

// Place Order
function placeOrder() {
  if (!confirmedAddress) {
    paymentShowToast("Please confirm your address first!");
    return;
  }
  
  if (!selectedOption) {
    paymentShowToast("Please select a payment method first!");
    return;
  }
  
  // Add the order
  orders.push({
      id: orders.length + 1,
      date: new Date().toLocaleString(),
      items: [...cartItems],
      total: totalAmount,
      status: 'Processing'
  });

  // Clear cart
  cartItems = [];
  updateCartCount();

  // Show success page after order is placed
  paymentSuccessText.innerText = `Order Placed Successfully with ${selectedOption}`;
  paymentSuccessPage.style.display = "flex";
  if (paymentSuccessSound) paymentSuccessSound.play();
  setTimeout(() => {
    paymentSuccessPage.style.display = "none";
    // Reset the form after successful order
    paymentResetForm();
    showCategories();
  }, 3000);
}

// Reset form after successful order
function paymentResetForm() {
  paymentAddressSummary.style.display = "none";
  paymentOptions.forEach(o => o.classList.remove("selected"));
  selectedOption = null;
  paymentPlaceOrderBtn.disabled = true;
  
  // Clear form fields
  document.getElementById("paymentName").value = "";
  document.getElementById("paymentMobile").value = "";
  document.getElementById("paymentHouse").value = "";
  document.getElementById("paymentStreet").value = "";
  document.getElementById("paymentPincode").value = "";
  
  confirmedAddress = null;
}

// Initialize the application when the DOM is loaded
document.addEventListener('DOMContentLoaded', paymentInit);
  </script>
  <!-- New Cart Bar HTML -->
  <div class="cart-bar" id="cart-bar" onclick="showCart()">
    <div class="left">
      <div class="icon-square" aria-hidden="true">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"/>
          <line x1="3" y1="6" x2="21" y2="6"/>
          <path d="M16 10a4 4 0 0 1-8 0"/>
        </svg>
      </div>
      <div class="info">
        <div class="items">0 items</div>
        <div class="price">₹0</div>
      </div>
    </div>
    <div class="view">
      <div>View Cart</div>
      <svg class="chev" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M9 6l6 6-6 6" stroke-linecap="round" stroke-linejoin="round" />
      </svg>
    </div>
  </div>
</body>
</html>